{"version":3,"sources":["dashboard/ListItems.tsx","dashboard/Title.tsx","AppContext.ts","dashboard/Totalcases.tsx","dashboard/DataProviderHOC.tsx","dashboard/StateChart.tsx","dashboard/StateChartH.tsx","dashboard/TimeChart.tsx","dashboard/Dashboard.tsx","state/StateDataProviderHOC.tsx","state/StateDetails.tsx","Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["mainListItems","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","secondaryListItems","ListSubheader","inset","Title","props","Typography","variant","color","gutterBottom","children","Appcontext","React","createContext","AppContextProvider","Provider","Consumer","useStyles","makeStyles","depositContext","flex","Totals","classes","appContext","useContext","total","title","delta","colortext","type","deltaconfirmed","totalActive","totalrecovered","deltarecovered","totaldeceased","deltadeceased","Fragment","className","DataProvider","state","isLoaded","items","error","message","totalcases","statewise","statescount","deltaactive","timeforeach5000","response","active","confirmed","deaths","deltadeaths","lastupdatedtime","recovered","statecode","statenotes","fetch","then","res","json","result","Array","statesarray","statesdata","states_daily","countrysum","iMark","iDays","i","length","date1","Date","date2","diffTime","valueOf","diffDays","Math","ceil","parseInt","push","date","count","keysArray","Object","keys","reduce","obj","prop","undefined","__array","axios","get","_response","data","map","formatResponse","_statescount","setState","this","chartAppContext","value","Component","renderCustomizedLabel","x","y","width","height","cx","cy","r","fill","textAnchor","dominantBaseline","StateChart","useTheme","avg","round","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","minPointSize","content","StateChartH","layout","horizontal","axisLine","stroke","TimeChart","Copyright","align","href","getFullYear","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","fixedHeightPaper","clsx","Container","maxWidth","Grid","item","xs","md","lg","Paper","Box","pt","StateDataProvider","_props","stateCode","districtData","districts","stateIndex","StateDetails","Main","useState","open","setOpen","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","onClick","noWrap","Drawer","Divider","List","key","path","darkTheme","createMuiTheme","palette","light","main","dark","contrastText","secondary","typography","h4","fontSize","h6","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.921ba550.chunk.js","sourcesContent":["import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport DashboardIcon from '@material-ui/icons/Dashboard'\nimport BarChartIcon from '@material-ui/icons/BarChart'\nimport LayersIcon from '@material-ui/icons/Layers'\nimport AssignmentIcon from '@material-ui/icons/Assignment'\nimport { Link } from 'react-router-dom'\n\nexport const mainListItems = (\n  <div>\n    <ListItem button component={Link} to=\"/Dashboard\">\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/States\">\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"States\" />\n    </ListItem>\n    {/* <ListItem button component={Link} to=\"/TSState\">\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"State-Telangana\" />\n    </ListItem> */}\n  </div>\n)\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved reports</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem>\n  </div>\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\n\nexport default function Title(props: any) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  )\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n}\n","import React, { Fragment, Children } from 'react';\n\nexport interface AppContextInterface {\n    data: any,\n    total: number,\n    statewise: any,\n    statescount: any,\n    totalActive: any,\n    totaldeceased: any, \n    totalrecovered: any,\n    deltaconfirmed: any,\n    deltaactive: any, \n    deltarecovered: any, \n    deltadeceased: any,\n    timeforeach5000: any\n}\n\nexport const Appcontext =  React.createContext<AppContextInterface | null>(null);\n\nexport const AppContextProvider = Appcontext.Provider;\n  \nexport const AppContextConsumer = Appcontext.Consumer;","import React, { useContext } from 'react'\nimport Link from '@material-ui/core/Link'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Title from './Title'\nimport { Appcontext } from '../AppContext'\n\ninterface IProps {\n  type: number\n}\n\nfunction preventDefault(event: any) {\n  event.preventDefault()\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n})\n\nexport default function Totals(props: IProps) {\n  const classes = useStyles()\n  const appContext = useContext(Appcontext)\n  let total: number | undefined = 0\n  let title = ''\n  let delta = 0\n  let colortext = ''\n  switch (props.type) {\n    case 1:\n      total = appContext?.total\n      title = 'Confirmed'\n      delta = appContext?.deltaconfirmed\n      colortext = 'red-color-text'\n      break\n    case 2:\n      total = appContext?.totalActive\n      title = 'Active'\n      delta = -1 //appContext?.deltaactive\n      colortext = 'blue-color-text'\n      break\n    case 3:\n      total = appContext?.totalrecovered\n      title = 'Recovered'\n      delta = appContext?.deltarecovered\n      colortext = 'green-color-text'\n      break\n    case 4:\n      total = appContext?.totaldeceased\n      title = 'Deceased'\n      delta = appContext?.deltadeceased\n      colortext = 'gray-color-text'\n      break\n  }\n\n  return (\n    <React.Fragment>\n      <Title>{title}</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        {total}\n      </Typography>\n      {/* <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {new Date().toDateString()}\n      </Typography> */}\n      {delta > -1 ? (\n        <Typography color=\"textSecondary\" className={`${classes.depositContext} ${colortext}`}>\n          +[{delta}]\n        </Typography>\n      ) : <Typography color=\"textSecondary\" className={`${classes.depositContext} visually-hidden`}>\n      +[{delta}]\n    </Typography>}\n    </React.Fragment>\n  )\n}\n","import React, { Fragment, Children } from 'react'\nimport { AppContextInterface, AppContextProvider } from '../AppContext'\nimport { Constants } from './../statemap'\nimport { IStatewise } from '../models/IStatewise'\nimport axios from 'axios'\n\ninterface DataProps {\n  children: any\n}\n\ninterface DataState {\n  isLoaded: boolean\n  items: any\n  error: { message: '' }\n  totalcases: number\n  totalrecovered: number\n  totaldeceased: number\n  totalActive: number\n  statewise: any\n  statescount: any\n  deltaconfirmed: any\n  deltaactive: any\n  deltadeceased: any\n  deltarecovered: any,\n  timeforeach5000: any\n}\n\nexport default class DataProvider extends React.Component<\n  DataProps,\n  DataState\n> {\n  state: DataState = {\n    isLoaded: false,\n    items: [],\n    error: { message: '' },\n    totalcases: 0,\n    statewise: [],\n    statescount: [],\n    totalrecovered: 0,\n    totaldeceased: 0,\n    totalActive: 0,\n    deltaactive: 0,\n    deltaconfirmed: 0,\n    deltadeceased: 0,\n    deltarecovered: 0,\n    timeforeach5000: []\n  }\n\n  constructor(props: DataProps) {\n    super(props)\n    this.state = {\n      error: { message: '' },\n      isLoaded: false,\n      items: [],\n      totalcases: 0,\n      statewise: [],\n      statescount: [],\n      totalrecovered: 0,\n      totaldeceased: 0,\n      totalActive: 0,\n      deltaactive: 0,\n      deltaconfirmed: 0,\n      deltadeceased: 0,\n      deltarecovered: 0,\n      timeforeach5000: []\n    }\n  }\n\n  formatResponse(response: any): IStatewise {\n    return {\n      active: response.active,\n      confirmed: response.confirmed,\n      deaths: response.deaths,\n      deltaconfirmed: response.deltaconfirmed,\n      deltadeaths: response.deltadeaths,\n      deltarecovered: response.deltarecovered,\n      lastupdatedtime: response.lastupdatedtime,\n      recovered: response.recovered,\n      state: response.state,\n      statecode: response.statecode,\n      statenotes: response.statenotes,\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://api.covid19india.org/states_daily.json')\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          let statewise = new Array()\n          let statesarray = new Array()\n          let statesdata = result.states_daily\n          let countrysum = 0\n          let countryactive = 0\n          let countryrecovered = 0\n          let countrydeceased = 0\n          let timeforeach5000 = new Array();\n          let iMark = 1;\n          let iDays = 0;\n          for (let i = 0; i < statesdata.length; i++) {\n            // For linear graph\n            const date1: Date = new Date(statesdata[i]['date'])\n            const date2: Date = new Date()\n            const diffTime: any = date2.valueOf() - date1.valueOf()\n            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n\n            if (date1 <= date2) {\n              if (statesdata[i]['status'] == 'Confirmed') {\n                countrysum = countrysum + parseInt(statesdata[i]['tt'])\n                statesarray.push({\n                  total: countrysum,\n                  date: statesdata[i]['date'],\n                })\n                if(countrysum >= 5000 && countrysum % (iMark * 5000) < 2000){\n                  timeforeach5000.push({'mark': countrysum, 'interval': iDays})\n                  iDays = 0;\n                  iMark++;\n                }\n                iDays++;\n              }\n\n              switch (statesdata[i]['status']) {\n                case 'Recovered':\n                  countryrecovered =\n                    countryrecovered + parseInt(statesdata[i]['tt'])\n                  break\n                case 'Deceased':\n                  countrydeceased =\n                    countrydeceased + parseInt(statesdata[i]['tt'])\n                  break\n              }\n            }\n\n            //for datewuise graph\n            if (diffDays <= 10 && date1 <= date2) {\n              if (statesdata[i]['status'] == 'Confirmed') {\n                statewise.push({\n                  count: parseInt(statesdata[i]['tt']),\n                  date: statesdata[i]['date'],\n                })\n              }\n            }\n          }\n\n          let keysArray = Object.keys(statesdata[0])\n\n          //aggregate all the values for each row\n          const statescount = statesdata.reduce(\n            function (res, obj) {\n              for (let i = 0; i < keysArray.length; i++) {\n                const prop = keysArray[i]\n                if (prop != 'date' && prop != 'tt' && prop != 'status') {\n                  if (obj['status'] == 'Confirmed') {\n                    if (res[prop] == undefined) res[prop] = 0\n                    res[prop] += parseInt(obj[prop])\n                  }\n                }\n              }\n              return res\n            },\n            { __array: [] },\n          )\n\n          // keysArray = Object.keys(statescount)\n\n          // for (let i = 0; i < keysArray.length; i++) {\n          //   if (statescount[keysArray[i]] > 700) {\n          //     _statescount.push({\n          //       state: new Constants().getState(keysArray[i]),\n          //       count: statescount[keysArray[i]],\n          //     })\n          //   }\n          // }\n          axios\n            .get<any>('https://api.covid19india.org/data.json')\n            .then((response) => {\n              const _response = response.data.statewise.map((statewise: any) =>\n                this.formatResponse(statewise),\n              )\n              let _statescount: any = []\n\n              for (let i = 0; i < _response.length; i++) {\n                if (\n                  _response[i].confirmed > 700 &&\n                  _response[i].statecode != 'TT'\n                ) {\n                  _statescount.push({\n                    state: _response[i].state,\n                    count: parseInt(_response[i].confirmed),\n                  })\n                }\n              }\n\n              this.setState({\n                isLoaded: true,\n                totalcases: _response[0].confirmed,\n                totalActive: _response[0].active,\n                totaldeceased: _response[0].deaths,\n                totalrecovered: _response[0].recovered,\n                statescount: _statescount,\n                deltarecovered: _response[0].deltarecovered,\n                deltadeceased: _response[0].deltadeaths,\n                deltaconfirmed: _response[0].deltaconfirmed,\n                deltaactive: _response[0].deltaactive\n              })\n            })\n\n            //This is to exclude today from the list. \n          timeforeach5000[timeforeach5000.length - 1]['interval'] = timeforeach5000[timeforeach5000.length - 1]['interval'] -1\n         \n          this.setState({\n            isLoaded: true,\n            items: statesarray,\n            statewise: statewise,\n            timeforeach5000: timeforeach5000\n          })\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          })\n        },\n      )\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items,\n      totalcases,\n      statewise,\n      statescount,\n      totalActive,\n      totaldeceased,\n      totalrecovered,\n      deltaconfirmed,\n      deltaactive,\n      deltadeceased,\n      deltarecovered,\n      timeforeach5000\n    } = this.state\n\n    const chartAppContext: AppContextInterface = {\n      data: items,\n      total: totalcases,\n      statewise: statewise,\n      statescount: statescount,\n      totalActive,\n      totaldeceased,\n      totalrecovered,\n      deltaconfirmed,\n      deltarecovered,\n      deltaactive,\n      deltadeceased,\n      timeforeach5000\n    }\n    if (error.message != '') {\n      return <div>Error: {error.message}</div>\n    } else if (!isLoaded) {\n      return <div>Loading...</div>\n    } else {\n      return (\n        <AppContextProvider value={chartAppContext}>\n          <Fragment>{this.props.children}</Fragment>\n        </AppContextProvider>\n      )\n    }\n  }\n}\n","import React, { useContext } from 'react'\nimport { useTheme } from '@material-ui/core/styles'\nimport {\n  BarChart,\n  Bar,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  LabelList,\n  ResponsiveContainer,\n} from 'recharts'\nimport Title from './Title'\nimport { Appcontext } from '../AppContext'\n\nconst renderCustomizedLabel = (props) => {\n  const { x, y, width, height, value } = props\n  const radius = 10\n\n  return (\n    <g>\n      <circle cx={x + width / 2} cy={y - radius} r={radius} fill=\"#fff\" />\n      <text\n        x={x + width / 2}\n        y={y - radius}\n        fill=\"#3f5776\"\n        textAnchor=\"middle\"\n        dominantBaseline=\"middle\"\n      >\n        {value}\n      </text>\n    </g>\n  )\n}\n\nexport default function StateChart() {\n  const theme = useTheme()\n  const appContext = useContext(Appcontext)\n  const date1: Date = new Date(appContext?.statewise[0].date)\n  const date2: Date = new Date()\n  const diffTime: any = date2.valueOf() - date1.valueOf()\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n //aggregate all the values for each row\n  const statescount = appContext?.statewise.reduce(\n    function (res, obj) {\n        if (res['count'] == undefined) res['count'] = 0\n        res['count'] += parseInt(obj['count'])\n      return res\n    },\n    { __array: [] },\n  )\n  const avg = (statescount['count']) / (diffDays - 1)\n  \n  return (\n    <React.Fragment>\n      <Title>\n        {`Daily cases - `} {Math.round(avg)} {` per day for last 8 days`}\n      </Title>\n      <ResponsiveContainer width=\"99%\" height={400}>\n        <BarChart\n          data={appContext?.statewise}\n          height={400}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"date\" />\n          <YAxis domain={[0, 'dataMax + 100']} />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"count\" fill=\"#8884d8\" minPointSize={0}>\n            <LabelList dataKey=\"count\" content={renderCustomizedLabel} />\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  )\n}\n","import React, { useContext } from 'react'\nimport { useTheme } from '@material-ui/core/styles'\nimport {\n  BarChart,\n  Bar,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  LabelList,\n  Rectangle,\n  ResponsiveContainer,\n} from 'recharts'\nimport Title from './Title'\nimport { Appcontext } from '../AppContext'\n\nconst renderCustomizedLabel = (props) => {\n  const { x, y, width, height, value } = props\n  const radius = 10\n\n  return (\n    <g>\n      {/* <circle cx={x + width} cy={y + 2*radius} r={radius} fill=\"#fff\" /> */}\n      <text\n        x={x + width + 20}\n        y={y + 2 * radius}\n        fill=\"#3f5776\"\n        textAnchor=\"middle\"\n        dominantBaseline=\"middle\"\n      >\n        {value}\n      </text>\n    </g>\n  )\n}\n\ninterface IStateChartProps {\n  title: string\n}\n\nexport default function StateChartH(props: IStateChartProps) {\n  const theme = useTheme()\n  const appContext = useContext(Appcontext)\n  return (\n    <React.Fragment>\n      <Title>{props.title}</Title>\n      <ResponsiveContainer width=\"99%\" height={600}>\n      <BarChart\n        height={600}\n        layout=\"vertical\"\n        data={appContext?.statescount}\n        margin={{\n          top: 5,\n          right: 50,\n          left: 50,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" horizontal={false} />\n\n        <XAxis\n          type=\"number\"\n          dataKey=\"count\"\n          axisLine={true}\n          stroke=\"#a0a0a0\"\n          domain={[0, 'dataMax + 1000']}\n        />\n        <YAxis type=\"category\" dataKey=\"state\" width={40} />\n\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"count\" fill=\"#8884d8\" minPointSize={0}>\n          <LabelList dataKey=\"count\" content={renderCustomizedLabel} />\n        </Bar>\n      </BarChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  )\n}\n","import React, { useContext } from 'react'\nimport { useTheme } from '@material-ui/core/styles'\nimport {\n  BarChart,\n  Bar,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  LabelList,\n  ResponsiveContainer,\n} from 'recharts'\nimport Title from './Title'\nimport { Appcontext } from '../AppContext'\n\nconst renderCustomizedLabel = (props) => {\n  const { x, y, width, height, value } = props\n  const radius = 10\n\n  return (\n    <g>\n      <circle cx={x + width / 2} cy={y - radius} r={radius} fill=\"#fff\" />\n      <text\n        x={x + width / 2}\n        y={y - radius}\n        fill=\"#3f5776\"\n        textAnchor=\"middle\"\n        dominantBaseline=\"middle\"\n      >\n        {value}\n      </text>\n    </g>\n  )\n}\n\nexport default function TimeChart() {\n  const appContext = useContext(Appcontext)\n  return (\n    <React.Fragment>\n      <Title>\n        {`Days for each 5000 cases`}\n      </Title>\n      <ResponsiveContainer width=\"99%\" height={400}>\n        <BarChart\n          data={appContext?.timeforeach5000}\n          height={400}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"mark\" />\n          <YAxis dataKey=\"interval\" domain={[0, 'dataMax + 10']}/>\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"interval\" fill=\"#8884d8\" minPointSize={0}>\n            <LabelList dataKey=\"interval\" content={renderCustomizedLabel} />\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Link from '@material-ui/core/Link'\nimport Totalcases from './Totalcases'\nimport DataProviderHOC from './DataProviderHOC'\nimport StateChart from './StateChart'\nimport StateChartH from './StateChartH'\nimport TimeChart from './TimeChart'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Covid Dashboard\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    //height: 240,\n  },\n}))\n\nexport default function Dashboard() {\n  const classes = useStyles()\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\n\n  return (\n    <DataProviderHOC>\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <Grid container spacing={3}>\n          {/* Chart */}\n          {/* <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <Chart />\n              </Paper>\n            </Grid> */}\n          <Grid item xs={6} md={4} lg={3}>\n            <Paper className={`${fixedHeightPaper} red-border-left`}>\n              <Totalcases type={1} />\n            </Paper>\n          </Grid>\n          <Grid item xs={6} md={4} lg={3}>\n            <Paper className={`${fixedHeightPaper} blue-border-left`}>\n              <Totalcases type={2} />\n            </Paper>\n          </Grid>\n          <Grid item xs={6} md={4} lg={3}>\n            <Paper className={`${fixedHeightPaper} green-border-left`}>\n              <Totalcases type={3} />\n            </Paper>\n          </Grid>\n          {/* Total Cases */}\n          <Grid item xs={6} md={4} lg={3}>\n            <Paper className={`${fixedHeightPaper} gray-border-left`}>\n              <Totalcases type={4} />\n            </Paper>\n          </Grid>\n          {/* daily india */}\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <StateChartH title={'States with cases > 700'} />\n            </Paper>\n          </Grid>\n          {/* daily india */}\n          <Grid item xs={12} md={6} lg={6}>\n            <Paper className={classes.paper}>\n              <StateChart />\n            </Paper>\n          </Grid>\n          <Grid item xs={12} md={6} lg={6}>\n            <Paper className={classes.paper}>\n              <TimeChart />\n            </Paper>\n          </Grid>\n        </Grid>\n        <Box pt={4}>\n          <Copyright />\n        </Box>\n      </Container>\n    </DataProviderHOC>\n  )\n}\n","import React, { Fragment } from 'react'\nimport { AppContextInterface, AppContextProvider } from '../AppContext'\nimport { IStatewise } from '../models/IStatewise'\nimport axios from 'axios'\n\ninterface DataProps {\n  statecode: any\n  state: any\n}\n\ninterface DataState {\n  isLoaded: boolean\n  items: any\n  error: { message: '' }\n  totalcases: number\n  totalrecovered: number\n  totaldeceased: number\n  totalActive: number\n  statewise: any\n  statescount: any\n  deltaconfirmed: any\n  deltaactive: any\n  deltadeceased: any\n  deltarecovered: any\n}\n\nexport default class StateDataProvider extends React.Component<\n  DataProps,\n  DataState\n> {\n  _props: DataProps = {\n    state: 'Test',\n    statecode: 'test',\n  }\n  state: DataState = {\n    isLoaded: false,\n    items: [],\n    error: { message: '' },\n    totalcases: 0,\n    statewise: [],\n    statescount: [],\n    totalrecovered: 0,\n    totaldeceased: 0,\n    totalActive: 0,\n    deltaactive: 0,\n    deltaconfirmed: 0,\n    deltadeceased: 0,\n    deltarecovered: 0,\n  }\n\n  constructor(props: DataProps) {\n    super(props)\n    this._props = props\n    this.state = {\n      error: { message: '' },\n      isLoaded: false,\n      items: [],\n      totalcases: 0,\n      statewise: [],\n      statescount: [],\n      totalrecovered: 0,\n      totaldeceased: 0,\n      totalActive: 0,\n      deltaactive: 0,\n      deltaconfirmed: 0,\n      deltadeceased: 0,\n      deltarecovered: 0,\n    }\n  }\n\n  formatResponse(response: any): IStatewise {\n    return {\n      active: response.active,\n      confirmed: response.confirmed,\n      deaths: response.deaths,\n      deltaconfirmed: response.deltaconfirmed,\n      deltadeaths: response.deltadeaths,\n      deltarecovered: response.deltarecovered,\n      lastupdatedtime: response.lastupdatedtime,\n      recovered: response.recovered,\n      state: response.state,\n      statecode: response.statecode,\n      statenotes: response.statenotes,\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://api.covid19india.org/state_district_wise.json')\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          const state = this._props.state\n          const stateCode = this._props.statecode\n          let statewise = new Array()\n          let statesarray = new Array()\n          let statesdata = result[state].districtData\n          let _statescount: any = []\n\n          let districts = Object.keys(statesdata)\n\n          for (let i = 0; i < districts.length; i++) {\n            const prop = districts[i]\n            const count = parseInt(statesdata[prop].confirmed)\n            if (count > 10)\n              _statescount.push({\n                state: prop,\n                count: count,\n              })\n          }\n\n          axios\n            .get<any>('https://api.covid19india.org/data.json')\n            .then((response) => {\n              let stateIndex = 0\n              const _response = response.data.statewise.map((statewise: any) =>\n                this.formatResponse(statewise),\n              )\n              let _statescount: any = []\n\n              for (let i = 0; i < _response.length; i++) {\n                if (\n                  _response[i].confirmed > 0 &&\n                  _response[i].statecode != 'TT'\n                ) {\n                  if (_response[i].statecode == stateCode) {\n                    stateIndex = i\n                  }\n                }\n              }\n\n              this.setState({\n                isLoaded: true,\n                totalcases: _response[stateIndex].confirmed,\n                totalActive: _response[stateIndex].active,\n                totaldeceased: _response[stateIndex].deaths,\n                totalrecovered: _response[stateIndex].recovered,\n                deltarecovered: _response[stateIndex].deltarecovered,\n                deltadeceased: _response[stateIndex].deltadeaths,\n                deltaconfirmed: _response[stateIndex].deltaconfirmed,\n                deltaactive: _response[stateIndex].deltaactive,\n              })\n            })\n\n          this.setState({\n            isLoaded: true,\n            items: statesarray,\n            statewise: statewise,\n            statescount: _statescount,\n          })\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          })\n        },\n      )\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items,\n      totalcases,\n      statewise,\n      statescount,\n      totalActive,\n      totaldeceased,\n      totalrecovered,\n      deltaconfirmed,\n      deltaactive,\n      deltadeceased,\n      deltarecovered\n    } = this.state\n\n    const chartAppContext: AppContextInterface = {\n      data: items,\n      total: totalcases,\n      statewise: statewise,\n      statescount: statescount,\n      totalActive,\n      totaldeceased,\n      totalrecovered,\n      deltaconfirmed,\n      deltarecovered,\n      deltaactive,\n      deltadeceased,\n      timeforeach5000: []\n    }\n    if (error.message != '') {\n      return <div>Error: {error.message}</div>\n    } else if (!isLoaded) {\n      return <div>Loading...</div>\n    } else {\n      return (\n        <AppContextProvider value={chartAppContext}>\n          <Fragment>{this.props.children}</Fragment>\n        </AppContextProvider>\n      )\n    }\n  }\n}\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Link from '@material-ui/core/Link'\nimport Totalcases from './../dashboard/Totalcases'\nimport DataProviderHOC from './../dashboard/DataProviderHOC'\nimport StateChart from './../dashboard/StateChart'\nimport StateChartH from './../dashboard/StateChartH'\nimport StateDataProvider from './StateDataProviderHOC'\nimport Title from '../dashboard/Title'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Covid Dashboard\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    //height: 240,\n  },\n}))\n\ninterface IStateDetailsProps {\n  statecode: any\n  state: any\n}\n\nexport default function StateDetails(props: IStateDetailsProps) {\n  const classes = useStyles()\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\n\n  return (\n    <>\n      <StateDataProvider state={props.state} statecode={props.statecode}>\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Title>Andhra Pradesh</Title>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            {/* <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <Chart />\n              </Paper>\n            </Grid> */}\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} red-border-left`}>\n                <Totalcases type={1} />\n              </Paper>\n            </Grid>\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} blue-border-left`}>\n                <Totalcases type={2} />\n              </Paper>\n            </Grid>\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} green-border-left`}>\n                <Totalcases type={3} />\n              </Paper>\n            </Grid>\n            {/* Total Cases */}\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} gray-border-left`}>\n                <Totalcases type={4} />\n              </Paper>\n            </Grid>\n            {/* daily india */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <StateChartH title={'# of cases per district'} />\n              </Paper>\n            </Grid>\n            {/* daily india */}\n            {/* <Grid item xs={6} md={6} lg={6}>\n            <Paper className={classes.paper}>\n              <StateChart />\n            </Paper>\n          </Grid> */}\n          </Grid>\n        </Container>\n      </StateDataProvider>\n\n      <StateDataProvider state={'Telangana'} statecode={'TG'}>\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Title>Telangana</Title>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            {/* <Grid item xs={12} md={8} lg={9}>\n        <Paper className={fixedHeightPaper}>\n          <Chart />\n        </Paper>\n      </Grid> */}\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} red-border-left`}>\n                <Totalcases type={1} />\n              </Paper>\n            </Grid>\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} blue-border-left`}>\n                <Totalcases type={2} />\n              </Paper>\n            </Grid>\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} green-border-left`}>\n                <Totalcases type={3} />\n              </Paper>\n            </Grid>\n            {/* Total Cases */}\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} gray-border-left`}>\n                <Totalcases type={4} />\n              </Paper>\n            </Grid>\n            {/* daily india */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <StateChartH title={'# of cases per district'} />\n              </Paper>\n            </Grid>\n            {/* daily india */}\n            {/* <Grid item xs={6} md={6} lg={6}>\n      <Paper className={classes.paper}>\n        <StateChart />\n      </Paper>\n    </Grid> */}\n          </Grid>\n        </Container>\n      </StateDataProvider>\n      <StateDataProvider state={'Maharashtra'} statecode={'MH'}>\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Title>Maharashtra</Title>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            {/* <Grid item xs={12} md={8} lg={9}>\n        <Paper className={fixedHeightPaper}>\n          <Chart />\n        </Paper>\n      </Grid> */}\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} red-border-left`}>\n                <Totalcases type={1} />\n              </Paper>\n            </Grid>\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} blue-border-left`}>\n                <Totalcases type={2} />\n              </Paper>\n            </Grid>\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} green-border-left`}>\n                <Totalcases type={3} />\n              </Paper>\n            </Grid>\n            {/* Total Cases */}\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} gray-border-left`}>\n                <Totalcases type={4} />\n              </Paper>\n            </Grid>\n            {/* daily india */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <StateChartH title={'# of cases per district'} />\n              </Paper>\n            </Grid>\n            {/* daily india */}\n            {/* <Grid item xs={6} md={6} lg={6}>\n      <Paper className={classes.paper}>\n        <StateChart />\n      </Paper>\n    </Grid> */}\n          </Grid>\n        </Container>\n      </StateDataProvider>\n      <StateDataProvider state={'Delhi'} statecode={'DL'}>\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Title>Delhi</Title>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            {/* <Grid item xs={12} md={8} lg={9}>\n        <Paper className={fixedHeightPaper}>\n          <Chart />\n        </Paper>\n      </Grid> */}\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} red-border-left`}>\n                <Totalcases type={1} />\n              </Paper>\n            </Grid>\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} blue-border-left`}>\n                <Totalcases type={2} />\n              </Paper>\n            </Grid>\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} green-border-left`}>\n                <Totalcases type={3} />\n              </Paper>\n            </Grid>\n            {/* Total Cases */}\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} gray-border-left`}>\n                <Totalcases type={4} />\n              </Paper>\n            </Grid>\n            {/* daily india */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <StateChartH title={'# of cases per district'} />\n              </Paper>\n            </Grid>\n            {/* daily india */}\n            {/* <Grid item xs={6} md={6} lg={6}>\n      <Paper className={classes.paper}>\n        <StateChart />\n      </Paper>\n    </Grid> */}\n          </Grid>\n        </Container>\n      </StateDataProvider>\n      <Box pt={4}>\n        <Copyright />\n      </Box>\n    </>\n  )\n}\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Drawer from '@material-ui/core/Drawer'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport List from '@material-ui/core/List'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport Badge from '@material-ui/core/Badge'\nimport Link from '@material-ui/core/Link'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport { mainListItems, secondaryListItems } from './dashboard/ListItems'\nimport Dashboard from './dashboard/Dashboard'\nimport StateDetails from './state/StateDetails'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link as RouterLink,\n} from 'react-router-dom'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  \n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}))\n\nexport default function Main() {\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(false)\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"absolute\"\n          className={clsx(classes.appBar, open && classes.appBarShift)}\n        >\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(\n                classes.menuButton,\n                open && classes.menuButtonHidden,\n              )}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.title}\n            >\n              Covid Dashboard\n            </Typography>\n            {/* <IconButton color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n          }}\n          open={open}\n        >\n          <div className={classes.toolbarIcon}>\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>{mainListItems}</List>\n          <Divider />\n          <List>{secondaryListItems}</List>\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          {/* <Dashboard></Dashboard> */}\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch>\n            <Route key=\"ap-State\" path=\"/States\">\n              <StateDetails state={'Andhra Pradesh'} statecode={'AP'} />\n            </Route>\n            {/* <Route key=\"ts-state\" path=\"/TSState\">\n              <StateDetails state={'Telangana'} statecode={'TG'} />\n            </Route> */}\n            <Route path=\"/Dashboard\">\n              <Dashboard />\n            </Route>\n            <Route path=\"/\">\n              <Dashboard />\n            </Route>\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  )\n}\n","import React from 'react'\nimport './App.css'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport Main from './Main'\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      light: '#757ce8',\n      main: '#3f5776',\n      dark: '#002877',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44776',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n})\n\ndarkTheme.typography.h4 = {\n  fontSize: '1.2rem',\n  '@media (min-width:600px)': {\n    fontSize: '1.7rem',\n  },\n  [darkTheme.breakpoints.up('md')]: {\n    fontSize: '2.4rem',\n  },\n};\n\ndarkTheme.typography.h6 = {\n  fontSize: '1.0rem',\n  '@media (min-width:600px)': {\n    fontSize: '1.1rem',\n  },\n  [darkTheme.breakpoints.up('md')]: {\n    fontSize: '1.7rem',\n  },\n};\n\nfunction App() {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <Main></Main>\n      </div>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}