{"version":3,"sources":["dashboard/ListItems.tsx","dashboard/Title.tsx","AppContext.ts","dashboard/Totalcases.tsx","statemap.ts","dashboard/DataProviderHOC.tsx","dashboard/StateChart.tsx","dashboard/StateChartH.tsx","dashboard/Dashboard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","secondaryListItems","ListSubheader","inset","Title","props","Typography","component","variant","color","gutterBottom","children","Appcontext","React","createContext","AppContextProvider","Provider","Consumer","preventDefault","event","useStyles","makeStyles","depositContext","flex","Totals","classes","appContext","useContext","total","title","type","totalActive","totalrecovered","totaldeceased","Fragment","className","Date","toDateString","Link","href","onClick","Constants","stateId","DataProvider","state","isLoaded","items","error","message","totalcases","statewise","statescount","fetch","then","res","json","result","Array","statesarray","statesdata","states_daily","countrysum","countryrecovered","countrydeceased","i","length","date1","date2","diffTime","valueOf","diffDays","Math","ceil","parseInt","push","keysArray","Object","keys","reduce","obj","prop","undefined","__array","_statescount","getState","setState","this","chartAppContext","data","value","Component","renderCustomizedLabel","x","y","width","height","cx","cy","r","fill","textAnchor","dominantBaseline","StateChart","useTheme","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","minPointSize","content","StateChartH","layout","horizontal","axisLine","stroke","Copyright","align","getFullYear","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","useState","open","setOpen","fixedHeightPaper","clsx","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","noWrap","Badge","badgeContent","Drawer","Divider","List","Container","maxWidth","Grid","item","xs","md","lg","Paper","Box","pt","darkTheme","createMuiTheme","palette","light","main","dark","contrastText","secondary","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.bb123459.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Reports\" />\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved reports</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem>\n  </div>\n);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props:any) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { Fragment, Children } from 'react';\n\nexport interface AppContextInterface {\n    data: any,\n    total: number,\n    statewise: any,\n    statescount: any,\n    totalActive: any,\n    totaldeceased: any, \n    totalrecovered: any\n}\n\nexport const Appcontext =  React.createContext<AppContextInterface | null>(null);\n\nexport const AppContextProvider = Appcontext.Provider;\n  \nexport const AppContextConsumer = Appcontext.Consumer;","import React, { useContext } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\nimport { Appcontext } from '../AppContext';\n\ninterface IProps {\n  type: number\n}\n\nfunction preventDefault(event:any) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Totals(props: IProps) {\n  const classes = useStyles();\n  const appContext = useContext(Appcontext)\n  let total: number | undefined = 0;\n  let title = '';\n  switch(props.type){\n    case 1:\n      total = appContext?.total;\n      title = 'Total Confirmed Cases'\n     break;\n    case 2:\n      total = appContext?.totalActive;\n      title = 'Total Active Cases'\n     break;\n    case 3:\n      total = appContext?.totalrecovered;\n      title = 'Total Recovered Cases'\n     break;\n    case 4:\n      total = appContext?.totaldeceased;\n      title = 'Total Deceased'\n     break;\n  }\n\n  return (\n    <React.Fragment>\n      <Title>{title}</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        {total}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {new Date().toDateString()}\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View Details\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","export class Constants {\n   public getState(stateId) {\n        const stateMap = {\n            'ap': 'Andhra Pradesh',\n            'an' : 'Arunachal Pradesh',\n            'tg': 'Telangana',\n            'mh' : 'Maharashtra',\n            'dl' : 'Delhi',\n            'gj' : 'Gujarat',\n            'rj' : 'Rajasthan',\n            'tn' : 'Tamilnadu',\n            'up' : 'Uttar Pradesh'\n        }\n\n        return stateMap[stateId] ?? stateId;\n    }\n}","import React, { Fragment, Children } from 'react';\nimport { AppContextInterface, AppContextProvider } from '../AppContext';\nimport {Constants} from './../statemap'\n\ninterface DataProps {\n    children: any\n}\n\ninterface DataState {\n  isLoaded: boolean; \n  items: any,\n  error: {message : ''},\n  totalcases: number,\n  totalrecovered: number,\n  totaldeceased: number,\n  totalActive: number,\n  statewise: any,\n  statescount: any\n};\n\nexport default class DataProvider extends React.Component<DataProps, DataState> {\n    state: DataState = {\n        isLoaded: false,\n        items: [],\n        error: {message : ''},\n        totalcases: 0,\n        statewise: [],\n        statescount: [],\n        totalrecovered: 0,\n        totaldeceased: 0,\n        totalActive: 0\n    };\n\n    constructor(props:DataProps) {\n      super(props);\n      this.state = {\n        error: {message : ''},\n        isLoaded: false,\n        items: [],\n        totalcases: 0,\n        statewise: [],\n        statescount:[],\n        totalrecovered: 0,\n        totaldeceased: 0,\n        totalActive: 0\n      };\n    }\n  \n    componentDidMount() {\n      fetch(\"https://api.covid19india.org/states_daily.json\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            let statewise = new Array;\n            let statesarray = new Array;\n            let statesdata = result.states_daily;\n            let countrysum = 0;\n            let countryactive=0;\n            let countryrecovered=0;\n            let countrydeceased=0;\n            for (let i =0; i<statesdata.length;i++){ \n              // For linear graph\n              const date1: Date = new Date(statesdata[i][\"date\"]);\n              const date2: Date = new Date();\n              const diffTime: any = date2.valueOf() - date1.valueOf();;\n              const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); \n\n              if(date1 <= date2){\n                if(statesdata[i][\"status\"] == 'Confirmed'){\n                  countrysum = countrysum + parseInt(statesdata[i]['tt']);\n                statesarray.push(\n                    {'total': countrysum, 'date': statesdata[i][\"date\"]}\n                  )\n                }\n\n                debugger;\n                switch (statesdata[i]['status']){\n                   case 'Recovered':\n                      countryrecovered = countryrecovered + parseInt(statesdata[i]['tt']);\n                      break;\n                    case 'Deceased':\n                      countrydeceased = countrydeceased + parseInt(statesdata[i]['tt']);\n                      break;\n                }\n              }\n             \n              //for datewuise graph\n              if(diffDays <= 10 && date1 <= date2){\n                if(statesdata[i][\"status\"] == 'Confirmed'){\n                  statewise.push({\n                    \"count\": parseInt(statesdata[i][\"tt\"]), \"date\": statesdata[i][\"date\"]\n                  })\n                }\n              }\n            }\n\n            let keysArray = Object.keys(statesdata[0]);\n\n            //aggregate all the values for each row\n            const statescount = statesdata.reduce(function(res, obj) {\n              for (let i=0; i<keysArray.length; i++){\n                const prop = keysArray[i];\n                if(prop != 'date' && prop != 'tt' && prop != 'status'){\n                  if(obj['status'] == 'Confirmed'){\n                    if (res[prop] == undefined) res[prop]=0;\n                    res[prop] += parseInt(obj[prop]);\n                  }\n                }\n              }\n              return res;\n            }, {__array:[]});\n\n            keysArray = Object.keys(statescount);\n            let _statescount: any = []\n            \n            for (let i=0; i<keysArray.length; i++){\n              if(statescount[keysArray[i]] > 700){\n               _statescount.push({\"state\": new Constants().getState(keysArray[i]), 'count': statescount[keysArray[i]]})\n              }\n            }\n\n            this.setState({\n              isLoaded: true,\n              items: statesarray,\n              totalcases: countrysum,\n              statewise: statewise,\n              statescount: _statescount,\n              totalActive: countrysum - (countryrecovered + countrydeceased),\n              totaldeceased: countrydeceased,\n              totalrecovered: countryrecovered\n            });\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        )\n    }\n  \n    render() {\n      const { error, isLoaded, items, totalcases, statewise, statescount ,totalActive,totaldeceased, totalrecovered } = this.state;\n      debugger;\n      const chartAppContext: AppContextInterface = {\n        data: items,\n        total: totalcases,\n        statewise: statewise,\n        statescount: statescount,\n        totalActive: totalActive,\n        totaldeceased: totaldeceased,\n        totalrecovered: totalrecovered\n      };\n      if (error.message != '') {\n        return <div>Error: {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Loading...</div>;\n      } else {\n        return (\n            <AppContextProvider value={chartAppContext}>\n                <Fragment>\n                    {this.props.children}\n                </Fragment>\n            </AppContextProvider>\n        );\n      }\n    }\n  }","import React, { useContext } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LabelList, ResponsiveContainer\n  } from 'recharts';\nimport Title from './Title';\nimport { Appcontext } from '../AppContext';\n\nconst renderCustomizedLabel = (props) => {\n  const {\n    x, y, width, height, value,\n  } = props;\n  const radius = 10;\n\n  return (\n    <g>\n      <circle cx={x + width / 2} cy={y - radius} r={radius} fill=\"#fff\" />\n      <text x={x + width / 2} y={y - radius} fill=\"#3f5776\" textAnchor=\"middle\" dominantBaseline=\"middle\">\n        {value}\n      </text>\n    </g>\n  );\n};\n\nexport default function StateChart(){\n  const theme = useTheme();\n  const appContext = useContext(Appcontext)\n  const avg = '0.0'\n  return (\n    <React.Fragment>\n      <Title>{`India Daily Cases`}  {avg}</Title>\n      <BarChart\n        width={1200}\n        height={500}\n        data={appContext?.statewise}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"date\" />\n        <YAxis domain={[0, 'dataMax + 100']} />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"count\" fill=\"#8884d8\" minPointSize={0}>\n          <LabelList dataKey=\"count\" content={renderCustomizedLabel} />\n        </Bar>\n      </BarChart>\n    </React.Fragment>\n  );\n}","import React, { useContext } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LabelList, Rectangle\n  } from 'recharts';\nimport Title from './Title';\nimport { Appcontext } from '../AppContext';\n\nconst renderCustomizedLabel = (props) => {\n  const {\n    x, y, width, height, value,\n  } = props;\n  const radius = 10;\n\n  return (\n    <g>\n      {/* <circle cx={x + width} cy={y + 2*radius} r={radius} fill=\"#fff\" /> */}\n      <text x={x + width + 20} y={y+ 2*radius} fill=\"#3f5776\" textAnchor=\"middle\" dominantBaseline=\"middle\">\n        {value}\n      </text>\n    </g>\n  );\n};\n\nexport default function StateChartH(){\n  const theme = useTheme();\n  const appContext = useContext(Appcontext)\n  return (\n    <React.Fragment>\n      <Title>Today</Title>\n      <BarChart\n        width={1200}\n        height={600}\n        layout=\"vertical\"\n        data={appContext?.statescount}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" horizontal={false} />\n        \n        <XAxis\n                        type=\"number\"\n                        dataKey=\"count\"\n                        axisLine={true}\n                        stroke='#a0a0a0'\n                        domain={[0, 'dataMax + 1000']}\n                    />\n                    <YAxis\n                        type=\"category\"\n                        dataKey=\"state\"\n                        width={40}\n                    />\n        \n        \n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"count\" fill=\"#8884d8\" minPointSize={0}>\n          <LabelList dataKey=\"count\" content={renderCustomizedLabel} />\n        </Bar>\n      </BarChart>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from './ListItems';\nimport Chart from './Charts';\nimport Totalcases from './Totalcases';\nimport {Slideshow} from './ImageSlides'\nimport DataProviderHOC from './DataProviderHOC'\nimport StateChart from \"./StateChart\";\nimport StateChartH from \"./StateChartH\";\n\n\nfunction Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n          Covid Dashboard\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\n  const drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Covid Dashboard\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <DataProviderHOC>\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            {/* <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <Chart />\n              </Paper>\n            </Grid> */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Totalcases type={1}/>\n              </Paper>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Totalcases type={2}/>\n              </Paper>\n            </Grid>\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Totalcases type={3}/>\n              </Paper>\n            </Grid>\n            {/* Total Cases */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Totalcases type={4}/>\n              </Paper>\n            </Grid>\n            {/* daily india */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <StateChart/>\n              </Paper>\n            </Grid>\n            {/* daily india */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <StateChartH/>\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n        </DataProviderHOC>\n      </main>\n    </div>\n  );\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Dashboard from './dashboard/Dashboard'\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      light: '#757ce8',\n      main: '#3f5776',\n      dark: '#002877',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44776',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={darkTheme}>\n    <div className=\"App\">\n     <Dashboard></Dashboard>\n    </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}