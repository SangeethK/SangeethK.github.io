{"version":3,"sources":["icons/place-white-18dp.svg","icons/grid_on-white-18dp.svg","dashboard/ListItems.tsx","dashboard/Title.tsx","AppContext.ts","dashboard/Totalcases.tsx","statemap.ts","dashboard/DataProviderHOC.tsx","dashboard/StateChart.tsx","dashboard/StateChartH.tsx","dashboard/TimeChart.tsx","dashboard/StackRecovered.tsx","dashboard/Dashboard.tsx","state/StateDataProviderHOC.tsx","state/StateDetails.tsx","country/CitiesData.ts","country/StateBubbleMap.tsx","country/CountryMap.tsx","statestable/StateStats.tsx","statestable/StateStatsContainer.tsx","Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref3","fill","_ref","svgRef","title","props","viewBox","width","height","ref","ForwardRef","forwardRef","mainListItems","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","secondaryListItems","Title","Typography","variant","color","gutterBottom","children","Appcontext","React","createContext","AppContextProvider","Provider","AppContextConsumer","Consumer","useStyles","makeStyles","depositContext","flex","Totals","classes","appContext","useContext","total","delta","colortext","type","deltaconfirmed","totalActive","totalrecovered","deltarecovered","totaldeceased","deltadeceased","Fragment","className","Constants","stateId","toUpperCase","DataProvider","state","isLoaded","items","error","message","totalcases","statewise","statescount","deltaactive","timeforeach5000","allstatescount","statesrecovered","stateRowStats","stateDateWise","response","active","confirmed","deaths","deltadeaths","lastupdatedtime","recovered","statecode","statenotes","fetch","then","res","json","result","Array","statesarray","statesdata","states_daily","countrysum","countryrecovered","countrydeceased","iMark","iDays","statewiserecovered","stateCodeForMap","prevDate","tDate","Intl","DateTimeFormat","year","month","day","format","Date","data","j","stateCode","getState","currentRecord","prevRecord","filter","x","count","push","parseInt","date1","date2","diffTime","valueOf","diffDays","Math","ceil","date","mark","interval","existState","keysArray","reduce","obj","prop","propsum","curRecovered","isNaN","propsumrec","__array","yesterdayConfirmedStats","yesterdayRecoveredStats","yesterdayConfirmed","yesterdayRecovered","name","axios","get","_response","map","formatResponse","_statescount","_allstatescount","setState","chartAppContext","value","Component","renderCustomizedLabel","y","cx","cy","r","textAnchor","dominantBaseline","StateChart","useTheme","avg","undefined","round","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","minPointSize","content","StateChartH","useState","setData","setDate","useEffect","startDate","handle","setInterval","sort","a","b","tempstartDate","getDate","today","clearInterval","toString","layout","horizontal","axisLine","stroke","TimeChart","StateRecoveredChart","style","background","stackId","Copyright","align","href","getFullYear","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","fixedHeightPaper","clsx","Container","maxWidth","Grid","item","xs","md","lg","Paper","Box","pt","StateDataProvider","_props","districtData","districts","stateIndex","StateDetails","city","minLat","maxLat","minLong","maxLong","StateBubbleChart","_editableFG","leafletElement","addLayer","_layer","zoom","mulfactor","_onFeatureGroupReady","leafletGeoJSON","L","GeoJSON","leafletFG","eachLayer","layer","window","innerWidth","innerHeight","updateDimensions","removeEventListener","bind","forEach","eachState","find","activecases","addEventListener","hash","center","maxZoom","attributionControl","zoomControl","doubleClickZoom","scrollWheelZoom","dragging","animate","easeLinearity","FeatureGroup","reactFGref","CircleMarker","radius","log","fillOpacity","fillColor","Tooltip","direction","offset","opacity","CountryMap","context","StateBubbleMap","columns","id","label","StatesStatsTable","rows","page","rowsPerPage","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","minWidth","TableBody","slice","row","hover","role","tabIndex","console","StateStatsDetails","toDateString","Main","open","setOpen","CssBaseline","AppBar","Toolbar","IconButton","edge","onClick","noWrap","Drawer","Divider","List","path","darkTheme","createMuiTheme","palette","light","main","dark","contrastText","secondary","typography","h4","fontSize","h6","App","ThemeProvider","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.87581b2f.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar SvgPlaceWhite18Dp = function SvgPlaceWhite18Dp(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    fill: \"white\",\n    width: \"18px\",\n    height: \"18px\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgPlaceWhite18Dp, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/place-white-18dp.8b35a9fe.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z\"\n});\n\nvar SvgGridOnWhite18Dp = function SvgGridOnWhite18Dp(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    fill: \"white\",\n    width: \"18px\",\n    height: \"18px\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGridOnWhite18Dp, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/grid_on-white-18dp.13b1d089.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport DashboardIcon from '@material-ui/icons/Dashboard'\nimport BarChartIcon from '@material-ui/icons/BarChart'\nimport LayersIcon from '@material-ui/icons/Layers'\nimport AssignmentIcon from '@material-ui/icons/Assignment'\nimport { Link } from 'react-router-dom'\nimport { ReactComponent as MapIcon } from './../icons/place-white-18dp.svg'\nimport { ReactComponent as TableListIcon } from './../icons/grid_on-white-18dp.svg'\n\nexport const mainListItems = (\n  <div>\n    <ListItem button component={Link} to=\"/Dashboard\">\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/States\">\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"States\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/StateStats\">\n      <ListItemIcon>\n        <TableListIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"State Table\" />\n    </ListItem>\n    <ListItem button component={Link} to=\"/CountryMap\">\n      <ListItemIcon>\n        <MapIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Country Map\" />\n    </ListItem>\n  </div>\n)\n\nexport const secondaryListItems = (\n  <div>\n    {/* <ListSubheader inset>Misc</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Country Map\" />\n    </ListItem> */}\n  </div>\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\n\nexport default function Title(props: any) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  )\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n}\n","import React, { Fragment, Children } from 'react';\n\nexport interface AppContextInterface {\n    data: any,\n    total: number,\n    statewise: any,\n    statescount: any,\n    totalActive: any,\n    totaldeceased: any, \n    totalrecovered: any,\n    deltaconfirmed: any,\n    deltaactive: any, \n    deltarecovered: any, \n    deltadeceased: any,\n    timeforeach5000: any,\n    allstatescount: any,\n    statesrecovered: any,\n    stateRowStats: any,\n    stateDateWise: any\n}\n\nexport const Appcontext =  React.createContext<AppContextInterface | null>(null);\n\nexport const AppContextProvider = Appcontext.Provider;\n  \nexport const AppContextConsumer = Appcontext.Consumer;","import React, { useContext } from 'react'\nimport Link from '@material-ui/core/Link'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Title from './Title'\nimport { Appcontext } from '../AppContext'\n\ninterface IProps {\n  type: number\n}\n\nfunction preventDefault(event: any) {\n  event.preventDefault()\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n})\n\nexport default function Totals(props: IProps) {\n  const classes = useStyles()\n  const appContext = useContext(Appcontext)\n  let total: number | undefined = 0\n  let title = ''\n  let delta = 0\n  let colortext = ''\n  switch (props.type) {\n    case 1:\n      total = appContext?.total\n      title = 'Confirmed'\n      delta = appContext?.deltaconfirmed\n      colortext = 'red-color-text'\n      break\n    case 2:\n      total = appContext?.totalActive\n      title = 'Active'\n      delta = -1 //appContext?.deltaactive\n      colortext = 'blue-color-text'\n      break\n    case 3:\n      total = appContext?.totalrecovered\n      title = 'Recovered'\n      delta = appContext?.deltarecovered\n      colortext = 'green-color-text'\n      break\n    case 4:\n      total = appContext?.totaldeceased\n      title = 'Deceased'\n      delta = appContext?.deltadeceased\n      colortext = 'gray-color-text'\n      break\n  }\n\n  return (\n    <React.Fragment>\n      <Title>{title}</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        {total}\n      </Typography>\n      {/* <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {new Date().toDateString()}\n      </Typography> */}\n      {delta > -1 ? (\n        <Typography\n          color=\"textSecondary\"\n          className={`${classes.depositContext} ${colortext}`}\n        >\n          +[{delta}]\n        </Typography>\n      ) : (\n        <Typography\n          color=\"textSecondary\"\n          className={`${classes.depositContext} visually-hidden`}\n        >\n          +[{delta}]\n        </Typography>\n      )}\n    </React.Fragment>\n  )\n}\n","export class Constants {\n   public getState(stateId) {\n        \n        const stateMap = {\n            'AP': 'Andhra Pradesh',\n            'AR' : 'Arunachal Pradesh',\n            'TG': 'Telangana',\n            'MH' : 'Maharashtra',\n            'DL' : 'Delhi',\n            'GJ' : 'Gujarat',\n            'RJ' : 'Rajasthan',\n            'TN' : 'Tamilnadu',\n            'UP' : 'Uttar Pradesh',\n            'AN' : 'Andaman and Nicobar Islands',\n            'AS': 'Assam',\n            'BR' : 'Bihar',\n            'CH': 'Chandigarh',\n            'CT' : 'Chattisgarh',\n            'DN' : 'Daman and Diu',\n            'GA' : 'Goa',\n            'HR' : 'Haryana',\n            'HP' : 'Himachal Pradesh',\n            'JK' : 'Jammu and Kashmir',\n            'JH': 'Jharkhand',\n            'KA' : 'Karnataka',\n            'KL': 'Kerala',\n            'LA' : 'Lakshadweep Islands',\n            'MN' : 'Manipur',\n            'ML' : 'Meghalaya',\n            'MZ' : 'Mizoram',\n            'NL' : 'Nagaland',\n            'OR' : 'Odisha',\n            'PY' : 'Pondicherry',\n            'PB': 'Punjab',\n            'SK' : 'Sikkim',\n            'TR' : 'Tripura',\n            'UT' : 'Uttarakhand ',\n            'WB' : 'West Bengal',\n            'MP' : 'Madhya Pradesh',\n            'LD' : 'Ladakh'\n        }\n\n        return stateMap[stateId.toUpperCase()] ?? stateId;\n    }\n}","import React, { Fragment, Children } from 'react'\nimport { AppContextInterface, AppContextProvider } from '../AppContext'\nimport { Constants } from './../statemap'\nimport { IStatewise } from '../models/IStatewise'\nimport axios from 'axios'\n\ninterface DataProps {\n  children: any\n}\n\ninterface DataState {\n  isLoaded: boolean\n  items: any\n  error: { message: '' }\n  totalcases: number\n  totalrecovered: number\n  totaldeceased: number\n  totalActive: number\n  statewise: any\n  statescount: any\n  deltaconfirmed: any\n  deltaactive: any\n  deltadeceased: any\n  deltarecovered: any\n  timeforeach5000: any\n  allstatescount: any\n  statesrecovered: any\n  stateRowStats: any\n  stateDateWise: any\n}\n\nexport default class DataProvider extends React.Component<\n  DataProps,\n  DataState\n> {\n  state: DataState = {\n    isLoaded: false,\n    items: [],\n    error: { message: '' },\n    totalcases: 0,\n    statewise: [],\n    statescount: [],\n    totalrecovered: 0,\n    totaldeceased: 0,\n    totalActive: 0,\n    deltaactive: 0,\n    deltaconfirmed: 0,\n    deltadeceased: 0,\n    deltarecovered: 0,\n    timeforeach5000: [],\n    allstatescount: 0,\n    statesrecovered: [],\n    stateRowStats: [],\n    stateDateWise: [],\n  }\n\n  constructor(props: DataProps) {\n    super(props)\n    this.state = {\n      error: { message: '' },\n      isLoaded: false,\n      items: [],\n      totalcases: 0,\n      statewise: [],\n      statescount: [],\n      totalrecovered: 0,\n      totaldeceased: 0,\n      totalActive: 0,\n      deltaactive: 0,\n      deltaconfirmed: 0,\n      deltadeceased: 0,\n      deltarecovered: 0,\n      timeforeach5000: [],\n      allstatescount: 0,\n      statesrecovered: [],\n      stateRowStats: [],\n      stateDateWise: [],\n    }\n  }\n\n  formatResponse(response: any): IStatewise {\n    return {\n      active: response.active,\n      confirmed: response.confirmed,\n      deaths: response.deaths,\n      deltaconfirmed: response.deltaconfirmed,\n      deltadeaths: response.deltadeaths,\n      deltarecovered: response.deltarecovered,\n      lastupdatedtime: response.lastupdatedtime,\n      recovered: response.recovered,\n      state: response.state,\n      statecode: response.statecode,\n      statenotes: response.statenotes,\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://api.covid19india.org/states_daily.json')\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          let stateDateWise = new Array()\n          let statewise = new Array()\n          let statesarray = new Array()\n          let statesdata = result.states_daily\n          let countrysum = 0\n          let countryactive = 0\n          let countryrecovered = 0\n          let countrydeceased = 0\n          let timeforeach5000 = new Array()\n          let iMark = 1\n          let iDays = 0\n          let statewiserecovered = new Array()\n          let statewiseStats = new Array()\n          const stateCodeForMap = [\n            'mh',\n            'tg',\n            'tn',\n            'gj',\n            'dl',\n            'up',\n            'ap',\n            'br',\n            'or',\n            'rj',\n            'jk',\n            'pb',\n            'ka',\n            'kl',\n            'mp',\n          ]\n          let prevDate = ''\n          for (let i = 0; i < statesdata.length; i++) {\n            if (statesdata[i]['status'] == 'Confirmed') {\n              let tDate = new Intl.DateTimeFormat('en-GB', {\n                year: 'numeric',\n                month: 'short',\n                day: '2-digit',\n              }).format(new Date(statesdata[i]['date']))\n              stateDateWise[tDate] = { data: [] }\n\n              for (let j = 0; j < stateCodeForMap.length; j++) {\n                const stateCode = new Constants().getState(stateCodeForMap[j])\n                let currentRecord = 0\n                if (stateDateWise[prevDate]) {\n                  debugger\n                  const prevRecord = stateDateWise[prevDate].data.filter(\n                    (x) => x['state'] == stateCode,\n                  )\n                  currentRecord =\n                    prevRecord.length == 0 ? 0 : prevRecord[0].count\n                }\n                stateDateWise[tDate].data.push({\n                  state: new Constants().getState(stateCodeForMap[j]),\n                  count:\n                    currentRecord + parseInt(statesdata[i][stateCodeForMap[j]]),\n                })\n              }\n              // stateDateWise[tDate].data.push({state: new Constants().getState('mh'), count:  parseInt(statesdata[i]['mh'])})\n              // stateDateWise[tDate].data.push({state: new Constants().getState('tg'), count:  parseInt(statesdata[i]['tg'])} )\n              // stateDateWise[tDate].data.push({state: new Constants().getState('tn'), count:  parseInt(statesdata[i]['tn'])} )\n              // stateDateWise[tDate].data.push({state: new Constants().getState('gj'), count:  parseInt(statesdata[i]['gj'])} )\n              // stateDateWise[tDate].data.push({state: new Constants().getState('dl'), count:  parseInt(statesdata[i]['dl'])} )\n              // stateDateWise[tDate].data.push({state: new Constants().getState('up'), count:  parseInt(statesdata[i]['up'])} )\n              // stateDateWise[tDate].data.push({state: new Constants().getState('ap'), count:  parseInt(statesdata[i]['ap'])} )\n              // stateDateWise[tDate].data.push({state: new Constants().getState('br'), count:  parseInt(statesdata[i]['br'])} )\n              // stateDateWise[tDate].data.push({state: new Constants().getState('or'), count:  parseInt(statesdata[i]['or'])} )\n              // stateDateWise[tDate].data.push({state: new Constants().getState('rj'), count:  parseInt(statesdata[i]['rj'])} )\n              // stateDateWise[tDate].data.push({state: new Constants().getState('jk'), count:  parseInt(statesdata[i]['jk'])} )\n              // stateDateWise[tDate].data.push({state: new Constants().getState('pb'), count:  parseInt(statesdata[i]['pb'])} )\n\n              prevDate = new Intl.DateTimeFormat('en-GB', {\n                year: 'numeric',\n                month: 'short',\n                day: '2-digit',\n              }).format(new Date(statesdata[i]['date']))\n            }\n\n            // For linear graph\n            const date1: Date = new Date(statesdata[i]['date'])\n            const date2: Date = new Date()\n            const diffTime: any = date2.valueOf() - date1.valueOf()\n            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n\n            if (date1 <= date2) {\n              if (statesdata[i]['status'] == 'Confirmed') {\n                countrysum = countrysum + parseInt(statesdata[i]['tt'])\n                statesarray.push({\n                  total: countrysum,\n                  date: statesdata[i]['date'],\n                })\n                if (\n                  countrysum >= 20000 &&\n                  countrysum % (iMark * 20000) < 19999\n                ) {\n                  timeforeach5000.push({ mark: countrysum, interval: iDays })\n                  iDays = 1\n                  iMark++\n                }\n                iDays++\n              }\n\n              switch (statesdata[i]['status']) {\n                case 'Recovered':\n                  countryrecovered =\n                    countryrecovered + parseInt(statesdata[i]['tt'])\n                  break\n                case 'Deceased':\n                  countrydeceased =\n                    countrydeceased + parseInt(statesdata[i]['tt'])\n                  break\n              }\n            }\n\n            //for datewuise graph\n            if (diffDays <= 10 && date1 <= date2) {\n              if (statesdata[i]['status'] == 'Confirmed') {\n                statewise.push({\n                  count: parseInt(statesdata[i]['tt']),\n                  date: statesdata[i]['date'],\n                })\n              }\n            }\n\n            if (diffDays <= 30 && date1 <= date2) {\n              if (\n                statesdata[i]['status'] == 'Confirmed' ||\n                statesdata[i]['status'] == 'Recovered'\n              ) {\n                const existState = statewiserecovered.filter(\n                  (x) => x['date'] == statesdata[i]['date'],\n                )\n\n                if (existState && existState.length > 0) {\n                  if (statesdata[i]['status'] == 'Confirmed') {\n                    existState[0].confirmed = countrysum\n                  } else if (statesdata[i]['status'] == 'Recovered') {\n                    existState[0].recovered = countryrecovered\n                    existState[0].active =\n                      countrysum - countryrecovered - countrydeceased\n                  }\n                } else {\n                  if (statesdata[i]['status'] == 'Confirmed') {\n                    statewiserecovered.push({\n                      recovered: 0,\n                      confirmed: countrysum,\n                      date: statesdata[i]['date'],\n                    })\n                  } else if (statesdata[i]['status'] == 'Recovered') {\n                    statewiserecovered.push({\n                      active: 0,\n                      recovered: countryrecovered,\n                      date: statesdata[i]['date'],\n                    })\n                  }\n                }\n              }\n            }\n          }\n\n          let keysArray = Object.keys(statesdata[0])\n\n          //aggregate all the values for each row\n          const statescount = statesdata.reduce(\n            function (res, obj) {\n              for (let i = 0; i < keysArray.length; i++) {\n                const prop = keysArray[i]\n                if (prop != 'date' && prop != 'tt' && prop != 'status') {\n                  if (obj['status'] == 'Confirmed') {\n                    let propsum = parseInt(obj[prop])\n                    let curRecovered = 0\n                    if (res[prop]) {\n                      propsum =\n                        res[prop].confirmed +\n                        (isNaN(parseInt(obj[prop])) ? 0 : parseInt(obj[prop]))\n                      curRecovered = res[prop].recovered ?? 0\n                    }\n                    res[prop] = {\n                      confirmed: propsum,\n                      recovered: curRecovered,\n                    }\n                  } else if (obj['status'] == 'Recovered') {\n                    let propsumrec = parseInt(obj[prop])\n                    if (res[prop]) {\n                      propsumrec = res[prop].recovered + parseInt(obj[prop])\n                    }\n                    res[prop] = {\n                      confirmed: res[prop].confirmed,\n                      recovered: propsumrec,\n                    }\n                  }\n                }\n              }\n              return res\n            },\n            { __array: [] },\n          )\n\n          const yesterdayConfirmedStats = statesdata[statesdata.length - 3]\n          const yesterdayRecoveredStats = statesdata[statesdata.length - 2]\n\n          for (let j = 0; j < keysArray.length; j++) {\n            const prop = keysArray[j]\n            if (prop != 'date' && prop != 'tt' && prop != 'status') {\n              statescount[prop] = {\n                confirmed: statescount[prop].confirmed,\n                recovered: statescount[prop].recovered,\n                yesterdayConfirmed: parseInt(yesterdayConfirmedStats[prop]),\n                yesterdayRecovered: parseInt(yesterdayRecoveredStats[prop]),\n              }\n            }\n          }\n\n          function createData(\n            name,\n            confirmed,\n            recovered,\n            yesterdayConfirmed,\n            yesterdayRecovered,\n          ) {\n            return {\n              name,\n              confirmed,\n              recovered,\n              yesterdayConfirmed,\n              yesterdayRecovered,\n            }\n          }\n\n          let stateRowStats = new Array()\n\n          for (let key in statescount) {\n            if (statescount[key] && key != '__array') {\n              stateRowStats.push(\n                createData(\n                  new Constants().getState(key),\n                  statescount[key].confirmed,\n                  statescount[key].recovered,\n                  statescount[key].yesterdayConfirmed,\n                  statescount[key].yesterdayRecovered,\n                ),\n              )\n            }\n          }\n\n          axios\n            .get<any>('https://api.covid19india.org/data.json')\n            .then((response) => {\n              const _response = response.data.statewise.map((statewise: any) =>\n                this.formatResponse(statewise),\n              )\n              let _statescount: any = []\n              let _allstatescount: any = []\n\n              for (let i = 0; i < _response.length; i++) {\n                if (\n                  _response[i].confirmed > 700 &&\n                  _response[i].statecode != 'TT'\n                ) {\n                  _statescount.push({\n                    state: _response[i].state,\n                    count: parseInt(_response[i].confirmed),\n                  })\n                }\n\n                if (_response[i].statecode != 'TT') {\n                  _allstatescount.push({\n                    state: _response[i].state,\n                    count: parseInt(_response[i].active),\n                  })\n                }\n              }\n\n              this.setState({\n                isLoaded: true,\n                totalcases: _response[0].confirmed,\n                totalActive: _response[0].active,\n                totaldeceased: _response[0].deaths,\n                totalrecovered: _response[0].recovered,\n                statescount: _statescount,\n                deltarecovered: _response[0].deltarecovered,\n                deltadeceased: _response[0].deltadeaths,\n                deltaconfirmed: _response[0].deltaconfirmed,\n                deltaactive: _response[0].deltaactive,\n                allstatescount: _allstatescount,\n              })\n            })\n\n          //This is to exclude today from the list.\n          timeforeach5000[timeforeach5000.length - 1]['interval'] =\n            timeforeach5000[timeforeach5000.length - 1]['interval'] - 1\n\n          this.setState({\n            isLoaded: true,\n            items: statesarray,\n            statewise: statewise,\n            timeforeach5000: timeforeach5000,\n            statesrecovered: statewiserecovered,\n            stateRowStats: stateRowStats,\n            stateDateWise: stateDateWise,\n          })\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          })\n        },\n      )\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items,\n      totalcases,\n      statewise,\n      statescount,\n      totalActive,\n      totaldeceased,\n      totalrecovered,\n      deltaconfirmed,\n      deltaactive,\n      deltadeceased,\n      deltarecovered,\n      timeforeach5000,\n      allstatescount,\n      statesrecovered,\n      stateRowStats,\n      stateDateWise,\n    } = this.state\n\n    const chartAppContext: AppContextInterface = {\n      data: items,\n      total: totalcases,\n      statewise: statewise,\n      statescount: statescount,\n      totalActive,\n      totaldeceased,\n      totalrecovered,\n      deltaconfirmed,\n      deltarecovered,\n      deltaactive,\n      deltadeceased,\n      timeforeach5000,\n      allstatescount,\n      statesrecovered,\n      stateRowStats,\n      stateDateWise,\n    }\n    if (error.message != '') {\n      return <div>Error: {error.message}</div>\n    } else if (!isLoaded) {\n      return <div>Loading...</div>\n    } else {\n      return (\n        <AppContextProvider value={chartAppContext}>\n          <Fragment>{this.props.children}</Fragment>\n        </AppContextProvider>\n      )\n    }\n  }\n}\n","import React, { useContext } from 'react'\nimport { useTheme } from '@material-ui/core/styles'\nimport {\n  BarChart,\n  Bar,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  LabelList,\n  ResponsiveContainer,\n} from 'recharts'\nimport Title from './Title'\nimport { Appcontext } from '../AppContext'\n\nconst renderCustomizedLabel = (props) => {\n  const { x, y, width, height, value } = props\n  const radius = 10\n\n  return (\n    <g>\n      <circle cx={x + width / 2} cy={y - radius} r={0} />\n      <text\n        x={x + width / 2}\n        y={y - radius}\n        fill=\"#fff\"\n        textAnchor=\"middle\"\n        dominantBaseline=\"middle\"\n      >\n        {value}\n      </text>\n    </g>\n  )\n}\n\nexport default function StateChart() {\n  const theme = useTheme()\n  const appContext = useContext(Appcontext)\n  const date1: Date = new Date(appContext?.statewise[0].date)\n  const date2: Date = new Date()\n  const diffTime: any = date2.valueOf() - date1.valueOf()\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n  //aggregate all the values for each row\n  const statescount = appContext?.statewise.reduce(\n    function (res, obj) {\n      if (res['count'] == undefined) res['count'] = 0\n      res['count'] += parseInt(obj['count'])\n      return res\n    },\n    { __array: [] },\n  )\n  const avg = statescount['count'] / (diffDays - 1)\n\n  return (\n    <React.Fragment>\n      <Title>\n        {`Daily cases - `} {Math.round(avg)} {` per day for last 8 days`}\n      </Title>\n      <ResponsiveContainer width=\"99%\" height={400}>\n        <BarChart\n          data={appContext?.statewise}\n          height={400}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"date\" />\n          <YAxis domain={[0, 'dataMax + 500']} />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"count\" fill=\"#6495ED\" minPointSize={0}>\n            <LabelList dataKey=\"count\" content={renderCustomizedLabel} />\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  )\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport { useTheme } from '@material-ui/core/styles'\nimport {\n  BarChart,\n  Bar,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  LabelList,\n  Rectangle,\n  ResponsiveContainer,\n} from 'recharts'\nimport Title from './Title'\nimport { Appcontext } from '../AppContext'\n\nconst renderCustomizedLabel = (props) => {\n  const { x, y, width, height, value } = props\n  const radius = 10\n\n  return (\n    <g>\n      {/* <circle cx={x + width} cy={y + 2*radius} r={radius} fill=\"#fff\" /> */}\n      <text\n        x={x + width + 20}\n        y={y + 2 * radius}\n        fill=\"#fff\"\n        textAnchor=\"middle\"\n        dominantBaseline=\"middle\"\n      >\n        {value}\n      </text>\n    </g>\n  )\n}\n\ninterface IStateChartProps {\n  title: string\n}\n\nexport default function StateChartH(props: IStateChartProps) {\n  const theme = useTheme()\n  const appContext = useContext(Appcontext)\n  const [data, setData] = useState()\n\n  const [date, setDate] = useState('')\n  useEffect(() => {\n    let startDate = '14-Mar-20'\n\n    var handle = setInterval(() => {\n      let tDate = new Intl.DateTimeFormat('en-GB', {\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit',\n      }).format(new Date(startDate))\n\n      if (appContext?.stateDateWise[tDate]) {\n        setData(\n          appContext?.stateDateWise[tDate].data.sort(\n            (a, b) => b.count - a.count,\n          ),\n        )\n        setDate(tDate)\n\n        let tempstartDate = new Date(tDate)\n        tempstartDate.setDate(tempstartDate.getDate() + 2)\n\n        const today = new Intl.DateTimeFormat('en-GB', {\n          year: 'numeric',\n          month: 'short',\n          day: '2-digit',\n        }).format(new Date())\n\n        const formatDate = new Intl.DateTimeFormat('en-GB', {\n          year: 'numeric',\n          month: 'short',\n          day: '2-digit',\n        }).format(tempstartDate)\n\n        if (formatDate === today) {\n          clearInterval(handle)\n        }\n        startDate = tempstartDate.toString()\n      } else {\n        clearInterval(handle)\n      }\n    }, 300)\n\n    return () => clearInterval(handle)\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Title>Statewise Cases as on {date}</Title>\n      <ResponsiveContainer width=\"99%\" height={600}>\n        <BarChart\n          height={600}\n          layout=\"vertical\"\n          data={data}\n          margin={{\n            top: 5,\n            right: 50,\n            left: 50,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" horizontal={false} />\n\n          <XAxis\n            type=\"number\"\n            dataKey=\"count\"\n            axisLine={true}\n            stroke=\"#a0a0a0\"\n            domain={[0, 'dataMax + 1000']}\n          />\n          <YAxis type=\"category\" dataKey=\"state\" width={40} />\n\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"count\" fill=\"#6495ED\" minPointSize={0}>\n            <LabelList dataKey=\"count\" content={renderCustomizedLabel} />\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  )\n}\n","import React, { useContext } from 'react'\nimport { useTheme } from '@material-ui/core/styles'\nimport {\n  BarChart,\n  Bar,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  LabelList,\n  ResponsiveContainer,\n} from 'recharts'\nimport Title from './Title'\nimport { Appcontext } from '../AppContext'\n\nconst renderCustomizedLabel = (props) => {\n  const { x, y, width, height, value } = props\n  const radius = 10\n\n  return (\n    <g>\n      <circle cx={x + width / 2} cy={y - radius} r={radius} fill=\"#fff\" />\n      <text\n        x={x + width / 2}\n        y={y - radius}\n        fill=\"#3f5776\"\n        textAnchor=\"middle\"\n        dominantBaseline=\"middle\"\n      >\n        {value}\n      </text>\n    </g>\n  )\n}\n\nconst getColor = (props) => {\n  return '#6495ED'\n}\n\nexport default function TimeChart() {\n  const appContext = useContext(Appcontext)\n  return (\n    <React.Fragment>\n      <Title>{`Days for each 20000 cases`}</Title>\n      <ResponsiveContainer width=\"99%\" height={400}>\n        <BarChart\n          data={appContext?.timeforeach5000}\n          height={400}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"mark\" />\n          <YAxis dataKey=\"interval\" domain={[0, 'dataMax + 10']} />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"interval\" fill={getColor(1)} minPointSize={0}>\n            <LabelList dataKey=\"interval\" content={renderCustomizedLabel} />\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  )\n}\n","import React, { useContext } from 'react'\nimport { useTheme } from '@material-ui/core/styles'\nimport {\n  BarChart,\n  Bar,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  LabelList,\n  ResponsiveContainer,\n} from 'recharts'\nimport Title from './Title'\nimport { Appcontext } from '../AppContext'\n\nconst renderCustomizedLabel = (props) => {\n  const { x, y, width, height, value } = props\n  const radius = 10\n\n  return (\n    <g>\n      <circle cx={x + width / 2} cy={y - radius} r={0} />\n      <text\n        x={x + width / 2}\n        y={y - radius}\n        fill=\"#fff\"\n        textAnchor=\"middle\"\n        dominantBaseline=\"middle\"\n      >\n        {value}\n      </text>\n    </g>\n  )\n}\n\nexport default function StateRecoveredChart() {\n  const theme = useTheme()\n  const appContext = useContext(Appcontext)\n  const date1: Date = new Date(appContext?.statewise[0].date)\n  const date2: Date = new Date()\n  const diffTime: any = date2.valueOf() - date1.valueOf()\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n  //aggregate all the values for each row\n  const statescount = appContext?.statewise.reduce(\n    function (res, obj) {\n      if (res['count'] == undefined) res['count'] = 0\n      res['count'] += parseInt(obj['count'])\n      return res\n    },\n    { __array: [] },\n  )\n  const avg = statescount['count'] / (diffDays - 1)\n  const recoveredStyle = {\n    background: '#82ca9d',\n    height: '20px',\n    width: '20px',\n  }\n  const confirmedStyle = {\n    background: '#8884d8',\n    height: '20px',\n    width: '20px',\n  }\n  return (\n    <React.Fragment>\n      <Title>{`Recovered vs Active`}</Title>\n      <ResponsiveContainer width=\"99%\" height={400}>\n        <BarChart\n          data={appContext?.statesrecovered}\n          height={400}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"date\" />\n          <YAxis domain={[0, 'dataMax + 2000']} />\n          <Tooltip />\n          <Legend>\n            <div style={recoveredStyle}></div>\n            <div style={confirmedStyle}></div>\n          </Legend>\n          <Bar dataKey=\"active\" stackId=\"a\" fill=\"#6495ED\" minPointSize={0}>\n            <LabelList dataKey=\"count\" content={renderCustomizedLabel} />\n          </Bar>\n          <Bar dataKey=\"recovered\" stackId=\"a\" fill=\"#4CC417\" minPointSize={0}>\n            <LabelList dataKey=\"count\" content={renderCustomizedLabel} />\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Link from '@material-ui/core/Link'\nimport Totalcases from './Totalcases'\nimport DataProviderHOC from './DataProviderHOC'\nimport StateChart from './StateChart'\nimport StateChartH from './StateChartH'\nimport TimeChart from './TimeChart'\nimport StateRecoveredChart from './StackRecovered'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Covid Dashboard\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    //height: 240,\n  },\n}))\n\nexport default function Dashboard() {\n  const classes = useStyles()\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\n\n  return (\n    <DataProviderHOC>\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <Grid container spacing={3}>\n          {/* Chart */}\n          {/* <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <Chart />\n              </Paper>\n            </Grid> */}\n          <Grid item xs={6} md={4} lg={3}>\n            <Paper className={`${fixedHeightPaper} red-border-left`}>\n              <Totalcases type={1} />\n            </Paper>\n          </Grid>\n          <Grid item xs={6} md={4} lg={3}>\n            <Paper className={`${fixedHeightPaper} blue-border-left`}>\n              <Totalcases type={2} />\n            </Paper>\n          </Grid>\n          <Grid item xs={6} md={4} lg={3}>\n            <Paper className={`${fixedHeightPaper} green-border-left`}>\n              <Totalcases type={3} />\n            </Paper>\n          </Grid>\n          {/* Total Cases */}\n          <Grid item xs={6} md={4} lg={3}>\n            <Paper className={`${fixedHeightPaper} gray-border-left`}>\n              <Totalcases type={4} />\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <StateRecoveredChart />\n            </Paper>\n          </Grid>\n          {/* daily india */}\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <StateChartH title={'States with cases > 700'} />\n            </Paper>\n          </Grid>\n\n          {/* daily india */}\n          <Grid item xs={12} md={6} lg={6}>\n            <Paper className={classes.paper}>\n              <StateChart />\n            </Paper>\n          </Grid>\n          <Grid item xs={12} md={6} lg={6}>\n            <Paper className={classes.paper}>\n              <TimeChart />\n            </Paper>\n          </Grid>\n        </Grid>\n        <Box pt={4}>\n          <Copyright />\n        </Box>\n      </Container>\n    </DataProviderHOC>\n  )\n}\n","import React, { Fragment } from 'react'\nimport { AppContextInterface, AppContextProvider } from '../AppContext'\nimport { IStatewise } from '../models/IStatewise'\nimport axios from 'axios'\n\ninterface DataProps {\n  statecode: any\n  state: any\n}\n\ninterface DataState {\n  isLoaded: boolean\n  items: any\n  error: { message: '' }\n  totalcases: number\n  totalrecovered: number\n  totaldeceased: number\n  totalActive: number\n  statewise: any\n  statescount: any\n  deltaconfirmed: any\n  deltaactive: any\n  deltadeceased: any\n  deltarecovered: any\n}\n\nexport default class StateDataProvider extends React.Component<\n  DataProps,\n  DataState\n> {\n  _props: DataProps = {\n    state: 'Test',\n    statecode: 'test',\n  }\n  state: DataState = {\n    isLoaded: false,\n    items: [],\n    error: { message: '' },\n    totalcases: 0,\n    statewise: [],\n    statescount: [],\n    totalrecovered: 0,\n    totaldeceased: 0,\n    totalActive: 0,\n    deltaactive: 0,\n    deltaconfirmed: 0,\n    deltadeceased: 0,\n    deltarecovered: 0,\n  }\n\n  constructor(props: DataProps) {\n    super(props)\n    this._props = props\n    this.state = {\n      error: { message: '' },\n      isLoaded: false,\n      items: [],\n      totalcases: 0,\n      statewise: [],\n      statescount: [],\n      totalrecovered: 0,\n      totaldeceased: 0,\n      totalActive: 0,\n      deltaactive: 0,\n      deltaconfirmed: 0,\n      deltadeceased: 0,\n      deltarecovered: 0,\n    }\n  }\n\n  formatResponse(response: any): IStatewise {\n    return {\n      active: response.active,\n      confirmed: response.confirmed,\n      deaths: response.deaths,\n      deltaconfirmed: response.deltaconfirmed,\n      deltadeaths: response.deltadeaths,\n      deltarecovered: response.deltarecovered,\n      lastupdatedtime: response.lastupdatedtime,\n      recovered: response.recovered,\n      state: response.state,\n      statecode: response.statecode,\n      statenotes: response.statenotes,\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://api.covid19india.org/state_district_wise.json')\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          const state = this._props.state\n          const stateCode = this._props.statecode\n          let statewise = new Array()\n          let statesarray = new Array()\n          let statesdata = result[state].districtData\n          let _statescount: any = []\n\n          let districts = Object.keys(statesdata)\n\n          for (let i = 0; i < districts.length; i++) {\n            const prop = districts[i]\n            const count = parseInt(statesdata[prop].confirmed)\n            if (count > 10)\n              _statescount.push({\n                state: prop,\n                count: count,\n              })\n          }\n\n          axios\n            .get<any>('https://api.covid19india.org/data.json')\n            .then((response) => {\n              let stateIndex = 0\n              const _response = response.data.statewise.map((statewise: any) =>\n                this.formatResponse(statewise),\n              )\n              let _statescount: any = []\n\n              for (let i = 0; i < _response.length; i++) {\n                if (\n                  _response[i].confirmed > 0 &&\n                  _response[i].statecode != 'TT'\n                ) {\n                  if (_response[i].statecode == stateCode) {\n                    stateIndex = i\n                  }\n                }\n              }\n\n              this.setState({\n                isLoaded: true,\n                totalcases: _response[stateIndex].confirmed,\n                totalActive: _response[stateIndex].active,\n                totaldeceased: _response[stateIndex].deaths,\n                totalrecovered: _response[stateIndex].recovered,\n                deltarecovered: _response[stateIndex].deltarecovered,\n                deltadeceased: _response[stateIndex].deltadeaths,\n                deltaconfirmed: _response[stateIndex].deltaconfirmed,\n                deltaactive: _response[stateIndex].deltaactive,\n              })\n            })\n\n          this.setState({\n            isLoaded: true,\n            items: statesarray,\n            statewise: statewise,\n            statescount: _statescount,\n          })\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          })\n        },\n      )\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items,\n      totalcases,\n      statewise,\n      statescount,\n      totalActive,\n      totaldeceased,\n      totalrecovered,\n      deltaconfirmed,\n      deltaactive,\n      deltadeceased,\n      deltarecovered,\n    } = this.state\n\n    const chartAppContext: AppContextInterface = {\n      data: items,\n      total: totalcases,\n      statewise: statewise,\n      statescount: statescount,\n      totalActive,\n      totaldeceased,\n      totalrecovered,\n      deltaconfirmed,\n      deltarecovered,\n      deltaactive,\n      deltadeceased,\n      timeforeach5000: [],\n      allstatescount: 0,\n      statesrecovered: [],\n      stateRowStats: [],\n      stateDateWise: [],\n    }\n    if (error.message != '') {\n      return <div>Error: {error.message}</div>\n    } else if (!isLoaded) {\n      return <div>Loading...</div>\n    } else {\n      return (\n        <AppContextProvider value={chartAppContext}>\n          <Fragment>{this.props.children}</Fragment>\n        </AppContextProvider>\n      )\n    }\n  }\n}\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Link from '@material-ui/core/Link'\nimport Totalcases from './../dashboard/Totalcases'\nimport DataProviderHOC from './../dashboard/DataProviderHOC'\nimport StateChart from './../dashboard/StateChart'\nimport StateChartH from './../dashboard/StateChartH'\nimport StateDataProvider from './StateDataProviderHOC'\nimport Title from '../dashboard/Title'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Covid Dashboard\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    //height: 240,\n  },\n}))\n\ninterface IStateDetailsProps {\n  statecode: any\n  state: any\n}\n\nexport default function StateDetails(props: IStateDetailsProps) {\n  const classes = useStyles()\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\n\n  return (\n    <>\n      <StateDataProvider state={props.state} statecode={props.statecode}>\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Title>Andhra Pradesh</Title>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            {/* <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <Chart />\n              </Paper>\n            </Grid> */}\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} red-border-left`}>\n                <Totalcases type={1} />\n              </Paper>\n            </Grid>\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} blue-border-left`}>\n                <Totalcases type={2} />\n              </Paper>\n            </Grid>\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} green-border-left`}>\n                <Totalcases type={3} />\n              </Paper>\n            </Grid>\n            {/* Total Cases */}\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} gray-border-left`}>\n                <Totalcases type={4} />\n              </Paper>\n            </Grid>\n            {/* daily india */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <StateChartH title={'# of cases per district'} />\n              </Paper>\n            </Grid>\n            {/* daily india */}\n            {/* <Grid item xs={6} md={6} lg={6}>\n            <Paper className={classes.paper}>\n              <StateChart />\n            </Paper>\n          </Grid> */}\n          </Grid>\n        </Container>\n      </StateDataProvider>\n\n      <StateDataProvider state={'Telangana'} statecode={'TG'}>\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Title>Telangana</Title>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            {/* <Grid item xs={12} md={8} lg={9}>\n        <Paper className={fixedHeightPaper}>\n          <Chart />\n        </Paper>\n      </Grid> */}\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} red-border-left`}>\n                <Totalcases type={1} />\n              </Paper>\n            </Grid>\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} blue-border-left`}>\n                <Totalcases type={2} />\n              </Paper>\n            </Grid>\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} green-border-left`}>\n                <Totalcases type={3} />\n              </Paper>\n            </Grid>\n            {/* Total Cases */}\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} gray-border-left`}>\n                <Totalcases type={4} />\n              </Paper>\n            </Grid>\n            {/* daily india */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <StateChartH title={'# of cases per district'} />\n              </Paper>\n            </Grid>\n            {/* daily india */}\n            {/* <Grid item xs={6} md={6} lg={6}>\n      <Paper className={classes.paper}>\n        <StateChart />\n      </Paper>\n    </Grid> */}\n          </Grid>\n        </Container>\n      </StateDataProvider>\n      <StateDataProvider state={'Maharashtra'} statecode={'MH'}>\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Title>Maharashtra</Title>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            {/* <Grid item xs={12} md={8} lg={9}>\n        <Paper className={fixedHeightPaper}>\n          <Chart />\n        </Paper>\n      </Grid> */}\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} red-border-left`}>\n                <Totalcases type={1} />\n              </Paper>\n            </Grid>\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} blue-border-left`}>\n                <Totalcases type={2} />\n              </Paper>\n            </Grid>\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} green-border-left`}>\n                <Totalcases type={3} />\n              </Paper>\n            </Grid>\n            {/* Total Cases */}\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} gray-border-left`}>\n                <Totalcases type={4} />\n              </Paper>\n            </Grid>\n            {/* daily india */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <StateChartH title={'# of cases per district'} />\n              </Paper>\n            </Grid>\n            {/* daily india */}\n            {/* <Grid item xs={6} md={6} lg={6}>\n      <Paper className={classes.paper}>\n        <StateChart />\n      </Paper>\n    </Grid> */}\n          </Grid>\n        </Container>\n      </StateDataProvider>\n      <StateDataProvider state={'Delhi'} statecode={'DL'}>\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Title>Delhi</Title>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            {/* <Grid item xs={12} md={8} lg={9}>\n        <Paper className={fixedHeightPaper}>\n          <Chart />\n        </Paper>\n      </Grid> */}\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} red-border-left`}>\n                <Totalcases type={1} />\n              </Paper>\n            </Grid>\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} blue-border-left`}>\n                <Totalcases type={2} />\n              </Paper>\n            </Grid>\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} green-border-left`}>\n                <Totalcases type={3} />\n              </Paper>\n            </Grid>\n            {/* Total Cases */}\n            <Grid item xs={6} md={4} lg={3}>\n              <Paper className={`${fixedHeightPaper} gray-border-left`}>\n                <Totalcases type={4} />\n              </Paper>\n            </Grid>\n            {/* daily india */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <StateChartH title={'# of cases per district'} />\n              </Paper>\n            </Grid>\n            {/* daily india */}\n            {/* <Grid item xs={6} md={6} lg={6}>\n      <Paper className={classes.paper}>\n        <StateChart />\n      </Paper>\n    </Grid> */}\n          </Grid>\n        </Container>\n      </StateDataProvider>\n      <Box pt={4}>\n        <Copyright />\n      </Box>\n    </>\n  )\n}\n","let data = {\n    city: [\n        { \"name\": \"Maharashtra\", \"coordinates\": [75.300293, 19.663280], \"activecases\": 0, \"color\": \"#FF7733\" },\n        { \"name\": \"West Bengal\", \"coordinates\": [87.747803, 22.978624], \"activecases\": 0, \"color\": \"#FFE033\" },\n        { \"name\": \"Tamil Nadu\", \"coordinates\": [78.387451, 11.059821], \"activecases\": 0, \"color\": \"#FF7733\" },\n        { \"name\": \"Telangana\", \"coordinates\": [79.208824, 17.123184], \"activecases\": 0, \"color\": \"#33B2FF\" },\n        { \"name\": \"Madhya Pradesh\", \"coordinates\": [77.947998, 23.473324], \"activecases\": 0, \"color\": \"#FF7733\" },\n        { \"name\": \"Chattisgarh\", \"coordinates\": [81.828232, 21.295132], \"activecases\": 0, \"color\": \"#FFC733\" },\n        { \"name\": \"Delhi\", \"coordinates\": [76.040497, 29.065773], \"activecases\": 0, \"color\": \"#FF7733\" },\n        { \"name\": \"Rajasthan\", \"coordinates\": [73.432617, 27.391277], \"activecases\": 0 , \"color\": \"#FFE033\"},\n        { \"name\": \"Himachal Pradesh\", \"coordinates\": [77.571167, 32.084206], \"activecases\": 0, \"color\": \"#33B2FF\" },\n        { \"name\": \"Karnataka\", \"coordinates\": [75.713890, 15.317277], \"activecases\": 0 , \"color\": \"#33B2FF\"},\n        { \"name\": \"Kerala\", \"coordinates\": [76.271080, 10.850516], \"activecases\": 0 , \"color\": \"#8AFF33\"},\n        { \"name\": \"Gujarat\", \"coordinates\": [72.136230, 22.309425], \"activecases\": 0 , \"color\": \"#FF7733\"},\n        { \"name\": \"Andhra Pradesh\", \"coordinates\": [79.7400, 15.9129], \"activecases\": 0 , \"color\": \"#FFE033\"},\n        { \"name\": \"Uttar Pradesh\", \"coordinates\": [80.9462, 26.8467], \"activecases\": 0 , \"color\": \"#FF7733\"},\n        { \"name\": \"Punjab\", \"coordinates\": [75.3412, 31.1471], \"activecases\": 0 , \"color\": \"#FFE033\"},\n        { \"name\": \"Bihar\", \"coordinates\": [85.3131, 25.0961], \"activecases\": 0 , \"color\": \"#33B2FF\"},\n        { \"name\": \"Jammu and Kashmir\", \"coordinates\": [76.5762, 33.7782], \"activecases\": 0 , \"color\": \"#33B2FF\"},     \n        { \"name\": \"Odisha\", \"coordinates\": [85.0985, 20.9517], \"activecases\": 0 , \"color\": \"#33B2FF\"},\n        { \"name\": \"Jharkhand\", \"coordinates\": [85.2799, 23.6102], \"activecases\": 0 , \"color\": \"#33B2FF\"},\n        { \"name\": \"Assam\", \"coordinates\": [92.9376, 26.2006], \"activecases\": 0 , \"color\": \"#33B2FF\"},\n        { \"name\": \"Uttarakhand\", \"coordinates\": [79.0193, 30.0668], \"activecases\": 0 , \"color\": \"#33B2FF\"}\n    ],\n    minLat: -6.1751,\n    maxLat: 55.7558,\n    minLong: 37.6173,\n    maxLong: 139.6917\n}\n\nexport default data","import {\n  Map as LeafletMap,\n  CircleMarker,\n  TileLayer,\n  GeoJSON,\n  Marker,\n  Popup,\n  FeatureGroup,\n  Tooltip,\n} from 'react-leaflet'\nimport React, { useContext, Fragment, Component } from 'react'\nimport { Appcontext } from '../AppContext'\nimport 'leaflet/dist/leaflet.css'\nimport data from './CitiesData'\nimport L from 'leaflet'\nimport axios from 'axios'\nimport hash from 'object-hash'\nimport Control from 'react-leaflet-control'\nimport { Typography } from '@material-ui/core'\n\ninterface GeoProps {\n  data: any\n}\n\ninterface GeoState {\n  isLoaded: boolean\n  items: any\n  error: { message: '' }\n  height: string\n  width: string\n  zoom: number\n  mulfactor: number\n}\n\nclass StateBubbleChart extends React.Component<GeoProps, GeoState> {\n  _editableFG = { leafletElement: { addLayer: (_layer) => {} } }\n  state: GeoState = {\n    isLoaded: false,\n    items: [],\n    error: { message: '' },\n    height: '0',\n    width: '0',\n    zoom: 5,\n    mulfactor: 20,\n  }\n  constructor(props: GeoProps) {\n    super(props)\n    this.state = {\n      error: { message: '' },\n      isLoaded: false,\n      items: [],\n      height: '700px',\n      width: '100%',\n      zoom: 5,\n      mulfactor: 15,\n    }\n  }\n\n  updateDimensions() {\n    const height = window.innerWidth >= 992 ? window.innerHeight : 400\n    if (window.innerWidth < 600) {\n      this.setState({ zoom: 4, mulfactor: 8, height: '500px' })\n    }\n  }\n\n  componentWillMount() {\n    this.updateDimensions()\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateDimensions.bind(this))\n  }\n\n  async componentDidMount() {\n    const res = await axios.get('./data/custom.geo.json')\n\n    const items = res.data\n\n    const statewise = this.props.data\n    debugger\n    data.city.forEach((item) => {\n      const eachState = statewise.find((x) => {\n        if (x.state == item['name']) return x\n      })\n      if (eachState) {\n        item.activecases = eachState.count\n        if (eachState.count >= 5000) {\n          item.color = '#FF7733'\n        }\n        if (eachState.count > 1000 && eachState.count < 5000) {\n          item.color = '#FFE033'\n        }\n        if (eachState.count <= 1000) {\n          item.color = '#33B2FF'\n        }\n      } else {\n        item.activecases = 0\n      }\n    })\n\n    this.setState({ items: items })\n\n    window.addEventListener('resize', this.updateDimensions.bind(this))\n  }\n\n  _onFeatureGroupReady = (ref) => {\n    if (ref === null) {\n      return\n    }\n    this._editableFG = ref\n    if (this._editableFG != null) {\n      // populate the leaflet FeatureGroup with the geoJson layers\n      if (this.state.items) {\n        let leafletGeoJSON = new L.GeoJSON(this.state.items)\n        if (this._editableFG != null) {\n          let leafletFG = this._editableFG && this._editableFG.leafletElement\n          if (leafletFG != null) {\n            leafletGeoJSON.eachLayer((layer) => leafletFG.addLayer(layer))\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    //const appContext = useContext(Appcontext)\n    const { items, height, width, zoom, mulfactor } = this.state\n    const s = hash(items)\n\n    // let geoJSON = <></>\n\n    // if (items != null && items.features != null) {\n    //   geoJSON = (\n    //     <GeoJSON\n    //       key={hash(items)}\n    //       data={items}\n    //       style={() => ({\n    //         color: '#4a83ec',\n    //         weight: 0.5,\n    //         fillColor: '#1a1d62',\n    //         fillOpacity: 1,\n    //       })}\n    //     />\n    //   )\n    // }\n\n    const redlabelStyle = {\n      background: '#FF7733',\n      height: '20px',\n      width: '100px',\n    }\n\n    const bluelabelStyle = {\n      background: '#33B2FF',\n      height: '20px',\n      width: '100px',\n    }\n\n    const orangelabelStyle = {\n      background: '#FFE033',\n      height: '20px',\n      width: '100px',\n      color: 'black',\n    }\n\n    return (\n      <LeafletMap\n        key={hash(items)}\n        style={{ height: height, width: width }}\n        center={[22.44212, 78.391384]}\n        maxZoom={10}\n        attributionControl={true}\n        zoomControl={false}\n        doubleClickZoom={false}\n        scrollWheelZoom={false}\n        dragging={false}\n        animate={true}\n        easeLinearity={0.35}\n        zoom={zoom}\n      >\n        {/* {geoJSON} */}\n        {/* <Marker position={[50, 10]}>\n          <Popup>Popup for any custom information.</Popup>\n        </Marker> */}\n        <FeatureGroup\n          ref={(reactFGref) => {\n            this._onFeatureGroupReady(reactFGref)\n          }}\n        ></FeatureGroup>\n        {data.city.map((city) => {\n          return (\n            <CircleMarker\n              key={hash(city['name'])}\n              center={[city['coordinates'][1], city['coordinates'][0]]}\n              radius={\n                mulfactor *\n                Math.log(\n                  city['activecases'] / (city['activecases'] > 200 ? 400 : 500),\n                )\n              }\n              fillOpacity={0.5}\n              stroke={false}\n              fillColor={city['color']}\n            >\n              {/* <Popup>\n                    <span>{city['name'] +\n                    ': ' +\n                    ' ' +\n                    city['activecases']}</span>\n              </Popup> */}\n              <Tooltip direction=\"right\" offset={[-8, -2]} opacity={1}>\n                <span>{city['name'] + ': ' + ' ' + city['activecases']}</span>\n              </Tooltip>\n            </CircleMarker>\n          )\n        })}\n        <Control position=\"topleft\">\n          <div className={`info legend`}>\n            <Typography component=\"p\" variant=\"h4\">\n              Legend\n            </Typography>\n            <div style={redlabelStyle}>\n              <p>{'5000+'}</p>\n            </div>\n            <div style={orangelabelStyle}>\n              <p>{'1000 - 5000'}</p>\n            </div>\n            <div style={bluelabelStyle}>\n              <p>{'0 - 1000'}</p>\n            </div>\n          </div>\n        </Control>\n      </LeafletMap>\n    )\n  }\n}\n\nexport default StateBubbleChart\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Link from '@material-ui/core/Link'\nimport Title from '../dashboard/Title'\nimport StateBubbleMap from '../country/StateBubbleMap'\nimport DataProvider from '../dashboard/DataProviderHOC'\nimport { AppContextConsumer, AppContextProvider } from '../AppContext'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Covid Dashboard\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    //height: 240,\n  },\n}))\n\ninterface IStateDetailsProps {\n  statecode: any\n  state: any\n}\n\nexport default function CountryMap(props: IStateDetailsProps) {\n  const classes = useStyles()\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\n\n  return (\n    <>\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <Title>\n          Country wide Active Cases Spread (Hover on the Bubble to see the\n          number)\n        </Title>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Paper className={classes.paper}>\n              <DataProvider>\n                <AppContextConsumer>\n                  {(context) => (\n                    <StateBubbleMap data={context?.allstatescount} />\n                  )}\n                </AppContextConsumer>\n              </DataProvider>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <Box pt={4}>\n        <Copyright />\n      </Box>\n    </>\n  )\n}\n","import React, { useContext } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport { Appcontext } from '../AppContext'\n\ninterface Column {\n  id:\n    | 'name'\n    | 'confirmed'\n    | 'recovered'\n    | 'yesterdayConfirmed'\n    | 'yesterdayRecovered'\n  label: string\n  minWidth?: number\n  align?: 'right'\n  format?: (value: number) => string\n}\n\nconst columns: Column[] = [\n  { id: 'name', label: 'Name' },\n  { id: 'confirmed', label: 'Total Confirmed', align: 'right' },\n  {\n    id: 'yesterdayConfirmed',\n    label: 'Yesterday Cases',\n    align: 'right',\n  },\n  {\n    id: 'recovered',\n    label: 'Total Recovered',\n    align: 'right',\n  },\n\n  {\n    id: 'yesterdayRecovered',\n    label: 'Yesterday Recovered',\n    align: 'right',\n  },\n]\n\ninterface Data {\n  name: string\n  confirmed: number\n  recovered: number\n  yesterdayConfirmed: number\n  yesterdayRecovered: number\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {},\n})\n\nexport default function StatesStatsTable() {\n  const appContext = useContext(Appcontext)\n  const rows = appContext?.stateRowStats\n  const classes = useStyles()\n  const [page, setPage] = React.useState(0)\n  const [rowsPerPage, setRowsPerPage] = React.useState(100)\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setRowsPerPage(+event.target.value)\n    setPage(0)\n  }\n\n  debugger\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.name}>\n                    {columns.map((column) => {\n                      console.log(row[column.id])\n                      const value = row[column.id]\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === 'number'\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      )\n                    })}\n                  </TableRow>\n                )\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {/* <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      /> */}\n    </Paper>\n  )\n}\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Link from '@material-ui/core/Link'\nimport DataProvider from './../dashboard/DataProviderHOC'\nimport Title from '../dashboard/Title'\nimport StatesStatsTable from './StateStats'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Covid Dashboard\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    //height: 240,\n  },\n}))\n\ninterface IStateStatssProps {}\n\nexport default function StateStatsDetails(props: IStateStatssProps) {\n  const classes = useStyles()\n\n  return (\n    <>\n      <DataProvider>\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Title>Statewise data as on {new Date().toDateString()} </Title>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <StatesStatsTable />\n            </Grid>\n          </Grid>\n        </Container>\n      </DataProvider>\n\n      <Box pt={4}>\n        <Copyright />\n      </Box>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Drawer from '@material-ui/core/Drawer'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport List from '@material-ui/core/List'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport Badge from '@material-ui/core/Badge'\nimport Link from '@material-ui/core/Link'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport { mainListItems, secondaryListItems } from './dashboard/ListItems'\nimport Dashboard from './dashboard/Dashboard'\nimport StateDetails from './state/StateDetails'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link as RouterLink,\n} from 'react-router-dom'\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core'\nimport CountryMap from './country/CountryMap'\nimport StateStatsDetails from './statestable/StateStatsContainer'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}))\n\nexport default function Main() {\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(false)\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n\n  const [value, setValue] = useState('Dashboard')\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"absolute\"\n          className={clsx(classes.appBar, open && classes.appBarShift)}\n        >\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(\n                classes.menuButton,\n                open && classes.menuButtonHidden,\n              )}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.title}\n            >\n              Covid19 India Dashboard\n            </Typography>\n            {/* <IconButton color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n          }}\n          open={open}\n        >\n          <div className={classes.toolbarIcon}>\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>{mainListItems}</List>\n          <Divider />\n          <List>{secondaryListItems}</List>\n        </Drawer>\n        {/* <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\n            <BottomNavigationAction label=\"Dashboard\" value=\"Dashboard\">\n\n            </BottomNavigationAction>\n            <BottomNavigationAction label=\"State\" value=\"State\">\n\n            </BottomNavigationAction>\n        </BottomNavigation> */}\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          {/* <Dashboard></Dashboard> */}\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch>\n            <Route key=\"state-stats\" path=\"/StateStats\">\n              <StateStatsDetails></StateStatsDetails>\n            </Route>\n            <Route key=\"ap-State\" path=\"/States\">\n              <StateDetails state={'Andhra Pradesh'} statecode={'AP'} />\n            </Route>\n            <Route key=\"countrymap\" path=\"/CountryMap\">\n              <CountryMap statecode={'tt'} state={'test'}></CountryMap>\n            </Route>\n            <Route path=\"/Dashboard\">\n              <Dashboard />\n            </Route>\n            <Route path=\"/\">\n              <Dashboard />\n            </Route>\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  )\n}\n","import React from 'react'\nimport './App.css'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport Main from './Main'\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      light: '#757ce8',\n      main: '#3f5776',\n      dark: '#002877',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44776',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n})\n\ndarkTheme.typography.h4 = {\n  fontSize: '1.2rem',\n  '@media (min-width:600px)': {\n    fontSize: '1.2rem',\n  },\n  '@media (max-width:600px)': {\n    fontSize: '1.0rem',\n  },\n  [darkTheme.breakpoints.up('md')]: {\n    fontSize: '1.8rem',\n  },\n}\n\ndarkTheme.typography.h6 = {\n  fontSize: '1.0rem',\n  '@media (min-width:600px)': {\n    fontSize: '1.1rem',\n  },\n  [darkTheme.breakpoints.up('md')]: {\n    fontSize: '1.7rem',\n  },\n}\n\nfunction App() {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <Main></Main>\n      </div>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}