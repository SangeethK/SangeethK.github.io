{"version":3,"sources":["dashboard/ListItems.tsx","dashboard/Title.tsx","AppContext.ts","dashboard/Charts.tsx","dashboard/Totalcases.tsx","dashboard/ImageSlides.tsx","dashboard/DataProviderHOC.tsx","dashboard/StateChart.tsx","dashboard/Dashboard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","secondaryListItems","ListSubheader","inset","Title","props","Typography","component","variant","color","gutterBottom","children","Appcontext","React","createContext","AppContextProvider","Provider","Consumer","Chart","theme","useTheme","appContext","useContext","Fragment","data","margin","top","right","bottom","left","dataKey","stroke","palette","text","secondary","angle","position","style","textAnchor","fill","type","main","dot","preventDefault","event","useStyles","makeStyles","depositContext","flex","Deposits","classes","total","className","Date","toDateString","Link","href","onClick","slideImages","properties","duration","transitionDuration","infinite","indicators","arrows","pauseOnHover","onChange","oldIndex","newIndex","console","log","Slideshow","DataProvider","state","isLoaded","items","error","message","totalcases","statewise","fetch","then","res","json","result","Array","statesarray","statesdata","states_daily","countrysum","i","length","parseInt","push","setState","this","chartAppContext","value","Component","renderCustomizedLabel","x","y","width","height","cx","cy","r","dominantBaseline","StateChart","strokeDasharray","minPointSize","content","Copyright","align","getFullYear","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","useState","open","setOpen","fixedHeightPaper","clsx","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","noWrap","Badge","badgeContent","Drawer","Divider","List","Container","maxWidth","Grid","item","xs","md","lg","Paper","Box","pt","darkTheme","createMuiTheme","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b2cf3193.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Dashboard\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Reports\" />\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved reports</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem>\n  </div>\n);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props:any) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React, { Fragment, Children } from 'react';\n\nexport interface AppContextInterface {\n    data: any,\n    total: number,\n    statewise: any\n}\n\nexport const Appcontext =  React.createContext<AppContextInterface | null>(null);\n\nexport const AppContextProvider = Appcontext.Provider;\n  \nexport const AppContextConsumer = Appcontext.Consumer;","import React, { useContext } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from \"recharts\";\nimport Title from './Title';\nimport { Appcontext } from '../AppContext';\n\nexport default function Chart(){\n  const theme = useTheme();\n  const appContext = useContext(Appcontext)\n  debugger;\n  return (\n    <React.Fragment>\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={appContext?.data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"date\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\n            >\n              Cases\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"total\" stroke={theme.palette.primary.main} dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React, { useContext } from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\nimport { Appcontext } from '../AppContext';\n\nfunction preventDefault(event:any) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits() {\n  const classes = useStyles();\n  const appContext = useContext(Appcontext)\n  return (\n    <React.Fragment>\n      <Title>Total Active Cases</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        {appContext?.total}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on {new Date().toDateString()}\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View Details\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { Slide } from 'react-slideshow-image';\n\nconst slideImages = [\n    'images/dayindia.png',\n    'images/indiahor.png',\n    'images/indiadaily.png',\n    'images/apdaily.png',\n    'images/tsdaily.png',\n    'images/mhdaily.png',\n    'images/indiapie.png',\n  ];\n\n  const properties = {\n    duration: 5000,\n    transitionDuration: 500,\n    infinite: true,\n    indicators: true,\n    arrows: true,\n    pauseOnHover: true,\n    onChange: (oldIndex: any, newIndex: any) => {\n      console.log(`slide transition from ${oldIndex} to ${newIndex}`);\n    }\n  }\n\n  export const Slideshow = () => {\n    return (\n      <div className=\"slide-container\">\n        <Slide {...properties}>\n          <div className=\"each-slide\">\n            <div style={{'backgroundImage': `url(${slideImages[0]})`}}>\n              <span></span>\n            </div>\n          </div>\n          <div className=\"each-slide\">\n            <div style={{'backgroundImage': `url(${slideImages[1]})`}}>\n              <span></span>\n            </div>\n          </div>\n          <div className=\"each-slide\">\n            <div style={{'backgroundImage': `url(${slideImages[2]})`}}>\n              <span></span>\n            </div>\n          </div>\n        </Slide>\n      </div>\n    )\n}\n","import React, { Fragment, Children } from 'react';\nimport { AppContextInterface, AppContextProvider } from '../AppContext';\n\ninterface DataProps {\n    children: any\n}\n\ninterface DataState {\n  isLoaded: boolean; \n  items: any,\n  error: {message : ''},\n  totalcases: number,\n  statewise: any\n};\n\nexport default class DataProvider extends React.Component<DataProps, DataState> {\n    state: DataState = {\n        isLoaded: false,\n        items: [],\n        error: {message : ''},\n        totalcases: 0,\n        statewise: []\n    };\n\n    constructor(props:DataProps) {\n      super(props);\n      this.state = {\n        error: {message : ''},\n        isLoaded: false,\n        items: [],\n        totalcases: 0,\n        statewise: []\n      };\n    }\n  \n    componentDidMount() {\n      fetch(\"https://api.covid19india.org/states_daily.json\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            let statewise = new Array;\n            let statesarray = new Array;\n            let statesdata = result.states_daily;\n            let countrysum = 0;\n            for (let i =0; i<statesdata.length;i++){ \n              if(statesdata[i][\"status\"] == 'Confirmed'){\n                countrysum = countrysum + parseInt(statesdata[i]['tt']);\n               statesarray.push(\n                  {'total': countrysum, 'date': statesdata[i][\"date\"]}\n                 )\n                statewise.push({\n                   \"count\": parseInt(statesdata[i][\"tt\"]), \"date\": statesdata[i][\"date\"]\n                })\n               }\n            }\n\n            this.setState({\n              isLoaded: true,\n              items: statesarray,\n              totalcases: countrysum,\n              statewise: statewise\n            });\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        )\n    }\n  \n    render() {\n      const { error, isLoaded, items, totalcases, statewise } = this.state;\n      debugger;\n      const chartAppContext: AppContextInterface = {\n        data: items,\n        total: totalcases,\n        statewise: statewise\n      };\n      if (error.message != '') {\n        return <div>Error: {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Loading...</div>;\n      } else {\n        return (\n            <AppContextProvider value={chartAppContext}>\n                <Fragment>\n                    {this.props.children}\n                </Fragment>\n            </AppContextProvider>\n        );\n      }\n    }\n  }","import React, { useContext } from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LabelList, ResponsiveContainer\n  } from 'recharts';\nimport Title from './Title';\nimport { Appcontext } from '../AppContext';\n\nconst renderCustomizedLabel = (props) => {\n  const {\n    x, y, width, height, value,\n  } = props;\n  const radius = 10;\n\n  return (\n    <g>\n      <circle cx={x + width / 2} cy={y - radius} r={radius} fill=\"#8884d8\" />\n      <text x={x + width / 2} y={y - radius} fill=\"#fff\" textAnchor=\"middle\" dominantBaseline=\"middle\">\n        {value}\n      </text>\n    </g>\n  );\n};\n\nexport default function StateChart(){\n  const theme = useTheme();\n  const appContext = useContext(Appcontext)\n  return (\n    <React.Fragment>\n      <Title>Today</Title>\n      <BarChart\n        width={1200}\n        height={300}\n        data={appContext?.statewise}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"date\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"count\" fill=\"#8884d8\" minPointSize={0}>\n          <LabelList dataKey=\"count\" content={renderCustomizedLabel} />\n        </Bar>\n      </BarChart>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from './ListItems';\nimport Chart from './Charts';\nimport Totalcases from './Totalcases';\nimport {Slideshow} from './ImageSlides'\nimport DataProviderHOC from './DataProviderHOC'\nimport StateChart from \"./StateChart\";\n\nfunction Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n          Your Website\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\n  const drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Covid Dashboard\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <DataProviderHOC>\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Slideshow></Slideshow>\n          </Grid>\n            {/* Chart */}\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <Chart />\n              </Paper>\n            </Grid>\n            {/* Total Cases */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Totalcases />\n              </Paper>\n            </Grid>\n            {/* daily india */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <StateChart/>\n              </Paper>\n            </Grid>\n            {/* daily india */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <StateChart/>\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n        </DataProviderHOC>\n      </main>\n    </div>\n  );\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Dashboard from './dashboard/Dashboard'\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={darkTheme}>\n    <div className=\"App\">\n     <Dashboard></Dashboard>\n    </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}